webpackHotUpdate_N_E("pages/status-updates/dashboard",{

/***/ "./modules/statusUpdates/components/Overview2.js":
/*!*******************************************************!*\
  !*** ./modules/statusUpdates/components/Overview2.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var moment_range__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment-range */ \"./node_modules/moment-range/dist/moment-range.js\");\n/* harmony import */ var moment_range__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment_range__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var antd_lib_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd/lib/card */ \"./node_modules/antd/lib/card/index.js\");\n/* harmony import */ var antd_lib_card__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd_lib_card__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var antd_lib_date_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd/lib/date-picker */ \"./node_modules/antd/lib/date-picker/index.js\");\n/* harmony import */ var antd_lib_date_picker__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd_lib_date_picker__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var universal_cookie__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! universal-cookie */ \"./node_modules/universal-cookie/es6/index.js\");\n/* harmony import */ var _utils_dataFetch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../utils/dataFetch */ \"./utils/dataFetch.js\");\n/* harmony import */ var _Statsdash__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Statsdash */ \"./modules/statusUpdates/components/Statsdash.js\");\n/* harmony import */ var _Doughnut__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Doughnut */ \"./modules/statusUpdates/components/Doughnut.js\");\n\nvar _s = $RefreshSig$();\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\n\n\n\n// antd components\n\n\n\n\n\nvar RangePicker = antd_lib_date_picker__WEBPACK_IMPORTED_MODULE_5___default.a.RangePicker;\nvar moment = Object(moment_range__WEBPACK_IMPORTED_MODULE_3__[\"extendMoment\"])(moment__WEBPACK_IMPORTED_MODULE_2___default.a);\nvar cookies = new universal_cookie__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\nvar Overview2 = function Overview2() {\n  _s();\n  var usernamecookie = cookies.get('username');\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n    data = _useState[0],\n    setData = _useState[1];\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n    dailyLogData = _useState2[0],\n    setDailyLogData = _useState2[1];\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(new Date()),\n    startDate = _useState3[0],\n    setStartDate = _useState3[1];\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(new Date()),\n    endDate = _useState4[0],\n    setEndDate = _useState4[1];\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n    pieData = _useState5[0],\n    setPieData = _useState5[1];\n  var numberDays = 7;\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n    userName = _useState6[0],\n    setUserName = _useState6[1];\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(numberDays),\n    days = _useState7[0],\n    setDays = _useState7[1];\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(0),\n    given = _useState8[0],\n    setGiven = _useState8[1];\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(0),\n    notGiven = _useState9[0],\n    setNotGiven = _useState9[1];\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n    rangeLoaded = _useState10[0],\n    setRangeLoaded = _useState10[1];\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n    isLoaded = _useState11[0],\n    setLoaded = _useState11[1];\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(0),\n    firstCounter = _useState12[0],\n    setFirstCounter = _useState12[1];\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(0),\n    lastCounter = _useState13[0],\n    setLastCounter = _useState13[1];\n  var query = \"\\n  query MultiQuery($date: Date!, $startDate: Date!, $endDate: Date){\\n    getStatusUpdates(date: $date) {\\n      message\\n      member {\\n        username\\n        lastStatusUpdate\\n      }\\n      date\\n      timestamp\\n    }\\n    clubStatusUpdate(startDate: $startDate, endDate: $endDate){\\n      dailyLog{\\n        date\\n        membersSentCount\\n      }\\n      memberStats{\\n        user{\\n          username\\n          admissionYear\\n        }\\n        statusCount\\n      }\\n    }\\n  }\\n\";\n  Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(function () {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays = 7;\n    }\n    if (!isLoaded && rangeLoaded) {\n      var variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD'),\n        date: moment(endDate).format('YYYY-MM-DD')\n      };\n      var fetchMultiData = /*#__PURE__*/function () {\n        var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(variables) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Object(_utils_dataFetch__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({\n                  query: query,\n                  variables: variables\n                }));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function fetchMultiData(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      fetchMultiData(variables).then(function (r) {\n        // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n        r.data.clubStatusUpdate.memberStats.map(function (item) {\n          console.log(r);\n          if (item.user.username === \"aashraya\") {\n            var start = moment(startDate);\n            var end = moment(endDate);\n            var arr = [['status', 'count'], ['Updates given'], ['Not given']];\n            numberDays = moment(end).diff(moment(start), 'days');\n            setDays(numberDays);\n            arr[1].push(parseInt(item.statusCount));\n            setGiven(item.statusCount);\n            arr[2].push(numberDays - item.statusCount);\n            setNotGiven(numberDays - item.statusCount);\n            setPieData(arr);\n          }\n        });\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n\n      // function getDates(startDate, endDate) {\n\n      //   const dates = [];\n      //   let currentDate = startDate;\n\n      //   // Include the start date in the array\n      //   dates.push(currentDate);\n\n      //   const addDays = function (days) {\n      //     const date = new Date(this.valueOf());\n      //     date.setDate(date.getDate() + days);\n      //     return date;\n      //   };\n\n      //   while (currentDate < endDate) {\n\n      //     currentDate = addDays.call(currentDate, 1);\n      //     dates.push(currentDate);\n      //   }\n      //   return dates;\n      // }\n\n      // const dates = getDates(startDate, endDate);\n\n      // setFirstCounter(0)\n      // setLastCounter(0)\n      // dates.forEach(function (date) {\n\n      //   const curdate = {\n      //     date:moment(date).format('YYYY-MM-DD'),\n      //   }\n      //   fetchMultiData(curdate).then((s) => {\n\n      //     // setUserName(r.data.getStatusUpdate.memberStats.usernamecookie);\n      //     // r.data.getStatusUpdate.memberStats.map((item)=> {\n      //     console.log(curdate)\n      //     if(s.data.getStatusUpdates[0].member.username === \"aashraya\"){\n      //       setFirstCounter((prevState)=>prevState+1);\n      //       // console.log(firstCounter)\n      //     }\n      //     if(s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\"){\n      //       setLastCounter((prevState)=>prevState+1);\n      //       // console.log(lastCounter)\n      //       // console.log(\"inc\")\n      //     }\n      //     console.log(s.data.getStatusUpdates[0].member.username)\n      //     console.log(s.data.getStatusUpdates.slice(-1)[0].member.username)\n\n      //     setLoaded(true);\n\n      //   });\n\n      // });\n    }\n  });\n\n  var handleRangeChange = function handleRangeChange(obj) {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays = moment(endDate).diff(moment(startDate), 'days');\n    }\n    // console.log(numberDays);\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-4\"\n  }, __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col text-right\"\n  }, __jsx(RangePicker, {\n    defaultValue: [moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'), moment(new Date(), 'YYYY-MM-DD')],\n    onChange: handleRangeChange\n  })))), __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-7 p-2\"\n  }, __jsx(antd_lib_card__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"flex-container\",\n    style: {\n      display: 'flex',\n      flexBasis: 0\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"flex-child yellow\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, days), __jsx(\"h7\", null, \"Total number of days\")), __jsx(\"div\", {\n    \"class\": \"flex-child red\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, given), __jsx(\"h7\", null, \"Updates given\")), __jsx(\"div\", {\n    \"class\": \"flex-child blue\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, notGiven), __jsx(\"h7\", null, \"Updates missed\")))), __jsx(antd_lib_card__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)',\n      marginTop: '20px'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated first:\", firstCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated last:\", lastCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times got kicked:\\u2620\")))), __jsx(\"div\", {\n    className: \"col-md-5 p-2\"\n  }, __jsx(antd_lib_card__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(_Doughnut__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    pdata: pieData\n  }))), __jsx(\"div\", {\n    className: \"col-md-12 p-2\"\n  }, __jsx(antd_lib_card__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(_Statsdash__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    data: data,\n    isLoaded: true\n  })))));\n};\n_s(Overview2, \"bBelfk492RytmHmhITUviOPE/uU=\");\n_c = Overview2;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Overview2);\nvar _c;\n$RefreshReg$(_c, \"Overview2\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/next/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/next/node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./modules/statusUpdates/components/Overview2.js\n");

/***/ })

})