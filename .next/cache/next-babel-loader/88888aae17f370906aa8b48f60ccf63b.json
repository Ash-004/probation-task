{"ast":null,"code":"var _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Card from 'antd/lib/card';\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Cookies from 'universal-cookie';\nimport dataFetch from '../../../utils/dataFetch';\nimport Statsdash from './Statsdash';\nimport Doughnut from './Doughnut';\nvar RangePicker = DatePicker.RangePicker;\nvar moment = extendMoment(Moment);\nvar cookies = new Cookies();\nvar Overview2 = function Overview2() {\n  _s();\n  var usernamecookie = cookies.get('username');\n  var _useState = useState([]),\n    data = _useState[0],\n    setData = _useState[1];\n  var _useState2 = useState([]),\n    dailyLogData = _useState2[0],\n    setDailyLogData = _useState2[1];\n  var _useState3 = useState(new Date()),\n    startDate = _useState3[0],\n    setStartDate = _useState3[1];\n  var _useState4 = useState(new Date()),\n    endDate = _useState4[0],\n    setEndDate = _useState4[1];\n  var _useState5 = useState([]),\n    pieData = _useState5[0],\n    setPieData = _useState5[1];\n  var numberDays = 7;\n  var _useState6 = useState([]),\n    userName = _useState6[0],\n    setUserName = _useState6[1];\n  var _useState7 = useState(numberDays),\n    days = _useState7[0],\n    setDays = _useState7[1];\n  var _useState8 = useState(0),\n    given = _useState8[0],\n    setGiven = _useState8[1];\n  var _useState9 = useState(0),\n    notGiven = _useState9[0],\n    setNotGiven = _useState9[1];\n  var _useState10 = useState(false),\n    rangeLoaded = _useState10[0],\n    setRangeLoaded = _useState10[1];\n  var _useState11 = useState(false),\n    isLoaded = _useState11[0],\n    setLoaded = _useState11[1];\n  var _useState12 = useState(0),\n    firstCounter = _useState12[0],\n    setFirstCounter = _useState12[1];\n  var _useState13 = useState(0),\n    lastCounter = _useState13[0],\n    setLastCounter = _useState13[1];\n  var _useState14 = useState(0),\n    kickedCount = _useState14[0],\n    setKickedCount = _useState14[1];\n  var prevIsKickedRef = useRef(false);\n  var query = \"query ($startDate: Date!, $endDate: Date){\\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\\n    dailyLog{\\n      date\\n      membersSentCount\\n    }\\n    memberStats{\\n      user{\\n        username\\n        admissionYear\\n      }\\n      statusCount\\n    }\\n  }\\n}\";\n  var query2 = \"query($date: Date!) {\\n  getStatusUpdates(date: $date) {\\n    message\\n    member {\\n      username\\n      lastStatusUpdate\\n    }\\n    date\\n    timestamp\\n  }\\n}\\n\";\n  var dummyData = {\n    data: {\n      getStatusUpdates: [{\n        message: \"Dummy message 1\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-08\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 2\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-09\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 1\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-10\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 2\",\n        member: {\n          username: \"dummy_username2\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-11\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      },\n      // Add 10 more dummy data objects\n      {\n        message: \"Dummy message 3\",\n        member: {\n          username: \"dummy_username3\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-12\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 4\",\n        member: {\n          username: \"dummy_username4\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-12\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 5\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-13\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"dummy_username6\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-14\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"dummy_username6\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-15\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"dummy_username6\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-16\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-17\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"h\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-18\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-19\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-120\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }]\n    }\n  };\n\n  // const fetchData = async (variables) => dataFetch({ query, variables });\n  // const fetchDashData = async (variables) => dataFetch({ query:query2, variables });\n\n  useEffect(function () {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays = 7;\n    }\n\n    // console.log(moment(endDate).diff(moment(startDate), 'days'));\n    if (!isLoaded && rangeLoaded) {\n      // fetchData(variables).then((r) => {\n      //   // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n      //   r.data.clubStatusUpdate.memberStats.map((item)=> {\n      //     if(item.user.username === \"aashraya\") {\n      //       var start = moment(startDate);\n      //       var end = moment(endDate);\n      //       const arr=[['status', 'count'],\n      //         ['Updates given'],\n      //         ['Not given'],];\n      //       numberDays=moment(end).diff(moment(start), 'days');\n      //       setDays(numberDays);\n      //       arr[1].push(parseInt(item.statusCount));\n      //       setGiven(item.statusCount);\n      //       arr[2].push(numberDays-item.statusCount);\n      //       setNotGiven(numberDays-item.statusCount);\n      //       setPieData(arr);\n      //       // console.log(arr);\n      //       // console.log(item.statusCount);\n      //     }\n      //   });\n      //\n      //\n      //\n      //\n      //   setData(r.data.clubStatusUpdate.memberStats);\n      //   setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n      //   setLoaded(true);\n      // });\n      var getDates = function getDates(startDate, endDate) {\n        var dates = [];\n        var currentDate = startDate;\n        dates.push(currentDate);\n        var addDays = function addDays(days) {\n          var date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n        while (currentDate < endDate) {\n          currentDate = addDays.call(currentDate, 1);\n          dates.push(currentDate);\n        }\n        return dates;\n      };\n      var variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD')\n      };\n      var dates = getDates(startDate, endDate);\n      setFirstCounter(0);\n      setLastCounter(0);\n      dates.forEach(function (date) {\n        var isKicked = false;\n        var curdate = {\n          date: moment(date).format('YYYY-MM-DD')\n        };\n        var missedUpdates = 0;\n\n        // Inside the forEach loop\n        dummyData.data.getStatusUpdates.forEach(function (statusUpdate) {\n          if (statusUpdate.member.username === \"aashraya\") {\n            missedUpdates = 0;\n            isKicked = false; // Reset missedUpdates counter when the username is found\n          } else {\n            missedUpdates++;\n            if (missedUpdates === 3) {\n              isKicked = true;\n              // Increase the kickedCount by one\n            }\n          }\n        });\n\n        if (isKicked !== prevIsKickedRef.current) {\n          prevIsKickedRef.current = isKicked;\n          if (isKicked) {\n            setKickedCount(function (prevCount) {\n              return prevCount + 1;\n            }); // Increase the kickedCount by one\n          }\n        }\n\n        console.log(isKicked);\n        console.log(kickedCount);\n        // fetchDashData(curdate).then((s) => {\n        //   console.log(s)\n\n        // console.log(\"isKicked:\", isKicked);\n        // console.log(\"kickedCount:\", kickedCount);\n        // if(s.data.getStatusUpdates[0].member.username === \"aashraya\"){\n        //   setFirstCounter((prevState)=>prevState+1);\n        // }\n        // if(s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\"){\n        //   setLastCounter((prevState)=>prevState+1);\n        // }\n        // console.log(s.data.getStatusUpdates[0].member.username)\n        // console.log(s.data.getStatusUpdates.slice(-1)[0].member.username)\n        //\n        // setLoaded(true);\n      });\n\n      // });\n    }\n  }, [startDate, endDate]);\n  var handleRangeChange = function handleRangeChange(obj) {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays = moment(endDate).diff(moment(startDate), 'days');\n    }\n    // console.log(numberDays);\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-4\"\n  }, __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col text-right\"\n  }, __jsx(RangePicker, {\n    defaultValue: [moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'), moment(new Date(), 'YYYY-MM-DD')],\n    onChange: handleRangeChange\n  })))), __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-7 p-2\"\n  }, __jsx(Card, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"flex-container\",\n    style: {\n      display: 'flex',\n      flexBasis: 0\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"flex-child yellow\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, days), __jsx(\"h7\", null, \"Total number of days\")), __jsx(\"div\", {\n    \"class\": \"flex-child red\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, given), __jsx(\"h7\", null, \"Updates given\")), __jsx(\"div\", {\n    \"class\": \"flex-child blue\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, notGiven), __jsx(\"h7\", null, \"Updates missed\")))), __jsx(Card, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)',\n      marginTop: '20px'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated first:\", firstCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated last:\", lastCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times got kicked:\\u2620\")))), __jsx(\"div\", {\n    className: \"col-md-5 p-2\"\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  })), __jsx(\"div\", {\n    className: \"col-md-12 p-2\"\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }))));\n};\n_s(Overview2, \"xZKDdx2WqDCVBlmeFSVlTPIXHag=\");\n_c = Overview2;\nexport default Overview2;\nvar _c;\n$RefreshReg$(_c, \"Overview2\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Moment","extendMoment","Card","DatePicker","Cookies","dataFetch","Statsdash","Doughnut","RangePicker","moment","cookies","Overview2","_s","usernamecookie","get","_useState","data","setData","_useState2","dailyLogData","setDailyLogData","_useState3","Date","startDate","setStartDate","_useState4","endDate","setEndDate","_useState5","pieData","setPieData","numberDays","_useState6","userName","setUserName","_useState7","days","setDays","_useState8","given","setGiven","_useState9","notGiven","setNotGiven","_useState10","rangeLoaded","setRangeLoaded","_useState11","isLoaded","setLoaded","_useState12","firstCounter","setFirstCounter","_useState13","lastCounter","setLastCounter","_useState14","kickedCount","setKickedCount","prevIsKickedRef","query","query2","dummyData","getStatusUpdates","message","member","username","lastStatusUpdate","date","timestamp","subtract","format","getDates","dates","currentDate","push","addDays","valueOf","setDate","getDate","call","variables","forEach","isKicked","curdate","missedUpdates","statusUpdate","current","prevCount","console","log","handleRangeChange","obj","diff","__jsx","className","defaultValue","onChange","style","boxShadow","display","flexBasis","flex","textAlign","marginTop","backgroundColor","_c","$RefreshReg$"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/Overview2.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Card from 'antd/lib/card';\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Cookies from 'universal-cookie';\n\nimport dataFetch from '../../../utils/dataFetch';\nimport Statsdash from './Statsdash';\nimport Doughnut from './Doughnut';\n\nconst { RangePicker } = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\n\nconst Overview2 = () => {\n  const usernamecookie=cookies.get('username');\n  const [data, setData] = useState([]);\n  const [dailyLogData, setDailyLogData] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [pieData, setPieData] = useState([]);\n  var numberDays=7;\n\n  const [userName,setUserName] = useState([]);\n  const [days,setDays] = useState(numberDays);\n  const [given,setGiven] = useState(0);\n  const [notGiven,setNotGiven] = useState(0);\n\n  const [rangeLoaded, setRangeLoaded] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const[firstCounter,setFirstCounter] = useState(0);\n  const[lastCounter,setLastCounter] = useState(0);\n\n  const [kickedCount, setKickedCount] = useState(0);\n  const prevIsKickedRef = useRef(false);\n\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n\n  const query2 = `query($date: Date!) {\n  getStatusUpdates(date: $date) {\n    message\n    member {\n      username\n      lastStatusUpdate\n    }\n    date\n    timestamp\n  }\n}\n`;\n  const dummyData = {\n    data: {\n      getStatusUpdates: [\n        {\n          message: \"Dummy message 1\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-08\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 2\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-09\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 1\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-10\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 2\",\n          member: {\n            username: \"dummy_username2\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-11\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        // Add 10 more dummy data objects\n        {\n          message: \"Dummy message 3\",\n          member: {\n            username: \"dummy_username3\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-12\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 4\",\n          member: {\n            username: \"dummy_username4\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-12\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 5\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-13\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"dummy_username6\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-14\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"dummy_username6\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-15\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"dummy_username6\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-16\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-17\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"h\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-18\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-19\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-120\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n      ],\n    },\n  };\n\n\n  // const fetchData = async (variables) => dataFetch({ query, variables });\n  // const fetchDashData = async (variables) => dataFetch({ query:query2, variables });\n\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays=7;\n    }\n\n    // console.log(moment(endDate).diff(moment(startDate), 'days'));\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD'),\n      };\n\n      // fetchData(variables).then((r) => {\n      //   // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n      //   r.data.clubStatusUpdate.memberStats.map((item)=> {\n      //     if(item.user.username === \"aashraya\") {\n      //       var start = moment(startDate);\n      //       var end = moment(endDate);\n      //       const arr=[['status', 'count'],\n      //         ['Updates given'],\n      //         ['Not given'],];\n      //       numberDays=moment(end).diff(moment(start), 'days');\n      //       setDays(numberDays);\n      //       arr[1].push(parseInt(item.statusCount));\n      //       setGiven(item.statusCount);\n      //       arr[2].push(numberDays-item.statusCount);\n      //       setNotGiven(numberDays-item.statusCount);\n      //       setPieData(arr);\n      //       // console.log(arr);\n      //       // console.log(item.statusCount);\n      //     }\n      //   });\n      //\n      //\n      //\n      //\n      //   setData(r.data.clubStatusUpdate.memberStats);\n      //   setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n      //   setLoaded(true);\n      // });\n\n      function getDates(startDate, endDate) {\n\n        const dates = [];\n        let currentDate = startDate;\n\n        dates.push(currentDate);\n\n        const addDays = function (days) {\n          const date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n\n        while (currentDate < endDate) {\n\n          currentDate = addDays.call(currentDate, 1);\n          dates.push(currentDate);\n        }\n        return dates;\n      }\n\n\n      const dates = getDates(startDate, endDate);\n\n      setFirstCounter(0)\n      setLastCounter(0)\n      dates.forEach(function (date) {\n\n\n          let isKicked = false;\n\n        const curdate = {\n          date:moment(date).format('YYYY-MM-DD'),\n\n        }\n        let missedUpdates = 0;\n\n// Inside the forEach loop\n        dummyData.data.getStatusUpdates.forEach((statusUpdate) => {\n          if (statusUpdate.member.username === \"aashraya\") {\n            missedUpdates = 0;\n            isKicked= false;// Reset missedUpdates counter when the username is found\n          } else {\n            missedUpdates++;\n            if (missedUpdates === 3) {\n              isKicked = true;\n               // Increase the kickedCount by one\n            }\n          }\n        });\n          if (isKicked !== prevIsKickedRef.current) {\n            prevIsKickedRef.current = isKicked;\n            if (isKicked) {\n              setKickedCount((prevCount) => prevCount + 1); // Increase the kickedCount by one\n            }\n          }\n        console.log(isKicked)\n        console.log(kickedCount)\n        // fetchDashData(curdate).then((s) => {\n        //   console.log(s)\n\n\n\n          // console.log(\"isKicked:\", isKicked);\n          // console.log(\"kickedCount:\", kickedCount);\n          // if(s.data.getStatusUpdates[0].member.username === \"aashraya\"){\n          //   setFirstCounter((prevState)=>prevState+1);\n          // }\n          // if(s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\"){\n          //   setLastCounter((prevState)=>prevState+1);\n          // }\n          // console.log(s.data.getStatusUpdates[0].member.username)\n          // console.log(s.data.getStatusUpdates.slice(-1)[0].member.username)\n          //\n          // setLoaded(true);\n\n        }\n        );\n\n\n\n      // });\n    }\n  },[startDate,endDate]);\n\n\n\n  const handleRangeChange = (obj) => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays=moment(endDate).diff(moment(startDate), 'days');\n\n    }\n    // console.log(numberDays);\n\n  };\n\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"mx-2\">\n        <div className=\"row m-0\">\n          <div className=\"col text-right\">\n            <RangePicker\n              defaultValue={[\n                moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'),\n                moment(new Date(), 'YYYY-MM-DD'),\n              ]}\n              onChange={handleRangeChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row m-0\">\n        <div className=\"col-md-7 p-2\">\n          <Card style={{ boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            <div class=\"flex-container\"\n                 style={{ display:'flex', flexBasis: 0 }}>\n              <div class=\"flex-child yellow\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{days}</h3>\n                <h7>Total number of days</h7>\n              </div>\n              <div class=\"flex-child red\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{given}</h3>\n                <h7>Updates given</h7>\n              </div>\n              <div class=\"flex-child blue\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{notGiven}</h3>\n                <h7>Updates missed</h7>\n              </div>\n            </div>\n          </Card>\n          <Card style={{ boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)', marginTop: '20px'}}>\n            <div><p>Number of times updated first:{firstCounter}</p></div>\n            <div><p>Number of times updated last:{lastCounter}</p></div>\n            <div><p>Number of times got kicked:☠</p></div>\n          </Card>\n        </div>\n        <div className=\"col-md-5 p-2\">\n          <Card style={{backgroundColor: '#FFFFFF', boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            {/*<Doughnut pdata={pieData}/>*/}\n          </Card>\n        </div>\n        <div className=\"col-md-12 p-2\">\n          <Card style={{backgroundColor: '#FFFFFF', boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            {/*<Statsdash data={data} isLoaded={true} />*/}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}