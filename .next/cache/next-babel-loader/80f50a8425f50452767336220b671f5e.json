{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport classnames from 'classnames';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport List from 'antd/lib/list';\nimport Avatar from 'antd/lib/avatar';\nimport Tabs from 'antd/lib/tabs';\nimport dataFetch from '../../../utils/dataFetch';\nconst moment = extendMoment(Moment);\nconst {\n  TabPane\n} = Tabs;\nconst Rankings = ({\n  isRangeSet,\n  startDate,\n  endDate\n}) => {\n  const {\n    0: memberData,\n    1: setMemberData\n  } = useState([]);\n  const {\n    0: hasLoaded,\n    1: setLoaded\n  } = useState(false);\n  const prevStart = useRef();\n  const prevEnd = useRef();\n  const query = `query($startDate: Date!, $endDate: Date){\n    clubStatusUpdate(startDate: $startDate, endDate: $endDate)\n    {\n      memberStats\n      {\n        user\n        {\n          username\n          firstName\n          lastName\n          profile{\n            profilePic\n          }\n          avatar \n          {\n             githubUsername\n          }\n        }\n       statusCount\n      }\n    }\n  }`;\n  const fetchData = async variables => dataFetch({\n    query,\n    variables\n  });\n  const fetchRankings = () => {\n    const variables = {\n      startDate: moment(startDate).format('YYYY-MM-DD'),\n      endDate: moment(endDate).format('YYYY-MM-DD')\n    };\n    fetchData(variables).then(r => {\n      setMemberData(r.data.clubStatusUpdate.memberStats);\n      setLoaded(true);\n    });\n  };\n  useEffect(() => {\n    if (!hasLoaded || prevStart.current !== startDate || prevEnd.current !== endDate && isRangeSet) fetchRankings();\n    prevStart.current = startDate;\n    prevEnd.current = endDate;\n  });\n  const loadingCards = () => __jsx(List, {\n    itemLayout: \"horizontal\",\n    dataSource: [1, 2, 3, 4, 5, 6],\n    renderItem: () => __jsx(List.Item, {\n      extra: __jsx(\"h3\", {\n        className: classnames(!hasLoaded ? 'bp3-skeleton d-inline' : null)\n      }, \"00\")\n    }, __jsx(List.Item.Meta, {\n      avatar: __jsx(Avatar, {\n        className: classnames(!hasLoaded ? 'bp3-skeleton' : null),\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n      }),\n      title: __jsx(\"h5\", {\n        className: classnames(!hasLoaded ? 'bp3-skeleton d-inline-block' : null)\n      }, \"Some Person's Name\"),\n      description: __jsx(\"div\", {\n        className: classnames(!hasLoaded ? 'bp3-skeleton d-inline-block' : null)\n      }, ' ', \"Some Text is there\")\n    }))\n  });\n  const memberCard = members => __jsx(List, {\n    itemLayout: \"horizontal\",\n    dataSource: members,\n    loading: !hasLoaded,\n    renderItem: m => __jsx(List.Item, {\n      extra: __jsx(\"h3\", null, m.statusCount)\n    }, __jsx(List.Item.Meta, {\n      avatar: __jsx(Avatar, {\n        src: m.user.profile.profilePic ? `https://api.amfoss.in/${m.user.profile.profilePic}` : `https://avatars.githubusercontent.com/${m.user.avatar.githubUsername}`\n      }),\n      title: __jsx(\"h4\", {\n        className: classnames(!hasLoaded ? 'bp3-skeleton mb-2' : 'mb-0')\n      }, __jsx(\"a\", {\n        href: `/@${m.user.username}`\n      }, m.user.firstName, \" \", m.user.lastName))\n    }))\n  });\n  return __jsx(Card, null, __jsx(\"h5\", {\n    className: \"mb-4 bp3-heading\"\n  }, \"Member Rankings\"), __jsx(Tabs, {\n    id: \"memberRankTabs\",\n    defaultActiveKey: \"1\"\n  }, __jsx(TabPane, {\n    tab: __jsx(\"h6\", null, \"Top 5\"),\n    key: \"1\"\n  }, hasLoaded ? memberCard(memberData.slice(0, 5)) : loadingCards()), __jsx(TabPane, {\n    tab: __jsx(\"h6\", null, \"Worst 5\"),\n    key: \"2\"\n  }, hasLoaded ? memberCard(memberData.slice().reverse().slice(0, 5)) : loadingCards())));\n};\nRankings.propTypes = {\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  isRangeSet: PropTypes.bool\n};\nexport default Rankings;","map":{"version":3,"names":["React","useEffect","useState","useRef","classnames","Moment","extendMoment","PropTypes","Card","List","Avatar","Tabs","dataFetch","moment","TabPane","Rankings","isRangeSet","startDate","endDate","memberData","setMemberData","hasLoaded","setLoaded","prevStart","prevEnd","query","fetchData","variables","fetchRankings","format","then","r","data","clubStatusUpdate","memberStats","current","loadingCards","__jsx","itemLayout","dataSource","renderItem","Item","extra","className","Meta","avatar","src","title","description","memberCard","members","loading","m","statusCount","user","profile","profilePic","githubUsername","href","username","firstName","lastName","id","defaultActiveKey","tab","key","slice","reverse","propTypes","instanceOf","Date","bool"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/Ranking.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport classnames from 'classnames';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport List from 'antd/lib/list';\nimport Avatar from 'antd/lib/avatar';\nimport Tabs from 'antd/lib/tabs';\n\nimport dataFetch from '../../../utils/dataFetch';\n\nconst moment = extendMoment(Moment);\nconst { TabPane } = Tabs;\n\nconst Rankings = ({ isRangeSet, startDate, endDate }) => {\n  const [memberData, setMemberData] = useState([]);\n  const [hasLoaded, setLoaded] = useState(false);\n\n  const prevStart = useRef();\n  const prevEnd = useRef();\n\n  const query = `query($startDate: Date!, $endDate: Date){\n    clubStatusUpdate(startDate: $startDate, endDate: $endDate)\n    {\n      memberStats\n      {\n        user\n        {\n          username\n          firstName\n          lastName\n          profile{\n            profilePic\n          }\n          avatar \n          {\n             githubUsername\n          }\n        }\n       statusCount\n      }\n    }\n  }`;\n\n  const fetchData = async (variables) => dataFetch({ query, variables });\n\n  const fetchRankings = () => {\n    const variables = {\n      startDate: moment(startDate).format('YYYY-MM-DD'),\n      endDate: moment(endDate).format('YYYY-MM-DD'),\n    };\n    fetchData(variables).then((r) => {\n      setMemberData(r.data.clubStatusUpdate.memberStats);\n      setLoaded(true);\n    });\n  };\n\n  useEffect(() => {\n    if (\n      !hasLoaded ||\n      prevStart.current !== startDate ||\n      (prevEnd.current !== endDate && isRangeSet)\n    )\n      fetchRankings();\n    prevStart.current = startDate;\n    prevEnd.current = endDate;\n  });\n\n  const loadingCards = () => (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={[1, 2, 3, 4, 5, 6]}\n      renderItem={() => (\n        <List.Item\n          extra={\n            <h3 className={classnames(!hasLoaded ? 'bp3-skeleton d-inline' : null)}>\n              00\n            </h3>\n          }\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar\n                className={classnames(!hasLoaded ? 'bp3-skeleton' : null)}\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              />\n            }\n            title={\n              <h5\n                className={classnames(\n                  !hasLoaded ? 'bp3-skeleton d-inline-block' : null\n                )}\n              >\n                Some Person's Name\n              </h5>\n            }\n            description={\n              <div\n                className={classnames(\n                  !hasLoaded ? 'bp3-skeleton d-inline-block' : null\n                )}\n              >\n                {' '}\n                Some Text is there\n              </div>\n            }\n          />\n        </List.Item>\n      )}\n    />\n  );\n\n  const memberCard = (members) => (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={members}\n      loading={!hasLoaded}\n      renderItem={(m) => (\n        <List.Item extra={<h3>{m.statusCount}</h3>}>\n          <List.Item.Meta\n            avatar={\n              <Avatar\n                src={\n                  m.user.profile.profilePic\n                    ? `https://api.amfoss.in/${m.user.profile.profilePic}`\n                    : `https://avatars.githubusercontent.com/${m.user.avatar.githubUsername}`\n                }\n              />\n            }\n            title={\n              <h4 className={classnames(!hasLoaded ? 'bp3-skeleton mb-2' : 'mb-0')}>\n                <a href={`/@${m.user.username}`}>\n                  {m.user.firstName} {m.user.lastName}\n                </a>\n              </h4>\n            }\n          />\n        </List.Item>\n      )}\n    />\n  );\n\n  return (\n    <Card>\n      <h5 className=\"mb-4 bp3-heading\">Member Rankings</h5>\n      <Tabs id=\"memberRankTabs\" defaultActiveKey=\"1\">\n        <TabPane tab={<h6>Top 5</h6>} key=\"1\">\n          {hasLoaded ? memberCard(memberData.slice(0, 5)) : loadingCards()}\n        </TabPane>\n        <TabPane tab={<h6>Worst 5</h6>} key=\"2\">\n          {hasLoaded\n            ? memberCard(memberData.slice().reverse().slice(0, 5))\n            : loadingCards()}\n        </TabPane>\n      </Tabs>\n    </Card>\n  );\n};\n\nRankings.propTypes = {\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  isRangeSet: PropTypes.bool,\n};\n\nexport default Rankings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}