{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Card from 'antd/lib/card';\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Cookies from 'universal-cookie';\nimport dataFetch from '../../../utils/dataFetch';\nimport Statsdash from './Statsdash';\nimport Doughnut from './Doughnut';\nconst {\n  RangePicker\n} = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\nconst Overview2 = () => {\n  const usernamecookie = cookies.get('username');\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: dailyLogData,\n    1: setDailyLogData\n  } = useState([]);\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(new Date());\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState(new Date());\n  const {\n    0: pieData,\n    1: setPieData\n  } = useState([]);\n  var numberDays = 7;\n  const {\n    0: userName,\n    1: setUserName\n  } = useState([]);\n  const {\n    0: days,\n    1: setDays\n  } = useState(numberDays);\n  const {\n    0: given,\n    1: setGiven\n  } = useState(0);\n  const {\n    0: notGiven,\n    1: setNotGiven\n  } = useState(0);\n  const {\n    0: rangeLoaded,\n    1: setRangeLoaded\n  } = useState(false);\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    0: firstCounter,\n    1: setFirstCounter\n  } = useState(0);\n  const {\n    0: lastCounter,\n    1: setLastCounter\n  } = useState(0);\n  const {\n    0: kickedCount,\n    1: setKickedCount\n  } = useState(0);\n  const prevIsKickedRef = useRef(false);\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n  const query2 = `query($date: Date!) {\n  getStatusUpdates(date: $date) {\n    message\n    member {\n      username\n      lastStatusUpdate\n    }\n    date\n    timestamp\n  }\n}\n`;\n  const dummyData = {\n    data: {\n      getStatusUpdates: [{\n        message: \"Dummy message 1\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-08\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 2\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-09\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 1\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-10\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 2\",\n        member: {\n          username: \"dummy_username2\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-11\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      },\n      // Add 10 more dummy data objects\n      {\n        message: \"Dummy message 3\",\n        member: {\n          username: \"dummy_username3\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-12\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 4\",\n        member: {\n          username: \"dummy_username4\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-12\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 5\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-13\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"dummy_username6\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-14\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"dummy_username6\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-15\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"dummy_username6\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-16\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-17\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"h\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-18\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"h\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-19\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"g\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-20\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 6\",\n        member: {\n          username: \"aashraya\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-21\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }]\n    }\n  };\n\n  // const fetchData = async (variables) => dataFetch({ query, variables });\n  const fetchDashData = async variables => dataFetch({\n    query: query2,\n    variables\n  });\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays = 7;\n    }\n\n    // console.log(moment(endDate).diff(moment(startDate), 'days'));\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD')\n      };\n      fetchData(variables).then(r => {\n        // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n        r.data.clubStatusUpdate.memberStats.map(item => {\n          if (item.user.username === \"aashraya\") {\n            var start = moment(startDate);\n            var end = moment(endDate);\n            const arr = [['status', 'count'], ['Updates given'], ['Not given']];\n            numberDays = moment(end).diff(moment(start), 'days');\n            setDays(numberDays);\n            arr[1].push(parseInt(item.statusCount));\n            setGiven(item.statusCount);\n            arr[2].push(numberDays - item.statusCount);\n            setNotGiven(numberDays - item.statusCount);\n            setPieData(arr);\n            // console.log(arr);\n            // console.log(item.statusCount);\n          }\n        });\n\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n      function getDates(startDate, endDate) {\n        const dates = [];\n        let currentDate = startDate;\n        dates.push(currentDate);\n        const addDays = function (days) {\n          const date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n        while (currentDate < endDate) {\n          currentDate = addDays.call(currentDate, 1);\n          dates.push(currentDate);\n        }\n        return dates;\n      }\n      const dates = getDates(startDate, endDate);\n      setFirstCounter(0);\n      setLastCounter(0);\n      setKickedCount(0);\n      dates.forEach(function (date) {\n        let isKicked = false;\n        const curdate = {\n          date: moment(date).format('YYYY-MM-DD')\n        };\n        let missedUpdates = 0;\n\n        // Inside the forEach loop\n        fetchDashData(curdate).then(s => {\n          s.data.getStatusUpdates.forEach(statusUpdate => {\n            if (statusUpdate.member.username === \"aashraya\") {\n              missedUpdates = 0;\n              isKicked = false;\n            } else {\n              missedUpdates++;\n              if (missedUpdates === 3) {\n                isKicked = true;\n              }\n            }\n          });\n          if (isKicked !== prevIsKickedRef.current) {\n            prevIsKickedRef.current = isKicked;\n            if (isKicked) {\n              setKickedCount(prevCount => prevCount + 1);\n            }\n          }\n          console.log(isKicked);\n          console.log(kickedCount);\n        });\n        fetchDashData(curdate).then(s => {\n          console.log(s);\n          console.log(\"isKicked:\", isKicked);\n          console.log(\"kickedCount:\", kickedCount);\n          if (s.data.getStatusUpdates[0].member.username === \"aashraya\") {\n            setFirstCounter(prevState => prevState + 1);\n          }\n          if (s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\") {\n            setLastCounter(prevState => prevState + 1);\n          }\n          console.log(s.data.getStatusUpdates[0].member.username);\n          console.log(s.data.getStatusUpdates.slice(-1)[0].member.username);\n          setLoaded(true);\n        });\n      });\n    }\n  }, [startDate, endDate]);\n  const handleRangeChange = obj => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays = moment(endDate).diff(moment(startDate), 'days');\n    }\n    // console.log(numberDays);\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-4\"\n  }, __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col text-right\"\n  }, __jsx(RangePicker, {\n    defaultValue: [moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'), moment(new Date(), 'YYYY-MM-DD')],\n    onChange: handleRangeChange\n  })))), __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-7 p-2\"\n  }, __jsx(Card, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(\"div\", {\n    class: \"flex-container\",\n    style: {\n      display: 'flex',\n      flexBasis: 0\n    }\n  }, __jsx(\"div\", {\n    class: \"flex-child yellow\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, days), __jsx(\"h7\", null, \"Total number of days\")), __jsx(\"div\", {\n    class: \"flex-child red\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, given), __jsx(\"h7\", null, \"Updates given\")), __jsx(\"div\", {\n    class: \"flex-child blue\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, notGiven), __jsx(\"h7\", null, \"Updates missed\")))), __jsx(Card, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)',\n      marginTop: '20px'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated first:\", firstCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated last:\", lastCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times got kicked:\", kickedCount)))), __jsx(\"div\", {\n    className: \"col-md-5 p-2\"\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  })), __jsx(\"div\", {\n    className: \"col-md-12 p-2\"\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }))));\n};\nexport default Overview2;","map":{"version":3,"names":["React","useEffect","useState","useRef","Moment","extendMoment","Card","DatePicker","Cookies","dataFetch","Statsdash","Doughnut","RangePicker","moment","cookies","Overview2","usernamecookie","get","data","setData","dailyLogData","setDailyLogData","startDate","setStartDate","Date","endDate","setEndDate","pieData","setPieData","numberDays","userName","setUserName","days","setDays","given","setGiven","notGiven","setNotGiven","rangeLoaded","setRangeLoaded","isLoaded","setLoaded","firstCounter","setFirstCounter","lastCounter","setLastCounter","kickedCount","setKickedCount","prevIsKickedRef","query","query2","dummyData","getStatusUpdates","message","member","username","lastStatusUpdate","date","timestamp","fetchDashData","variables","subtract","format","fetchData","then","r","clubStatusUpdate","memberStats","map","item","user","start","end","arr","diff","push","parseInt","statusCount","dailyLog","getDates","dates","currentDate","addDays","valueOf","setDate","getDate","call","forEach","isKicked","curdate","missedUpdates","s","statusUpdate","current","prevCount","console","log","prevState","slice","handleRangeChange","obj","__jsx","className","defaultValue","onChange","style","boxShadow","class","display","flexBasis","flex","textAlign","marginTop","backgroundColor"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/Overview2.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Card from 'antd/lib/card';\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Cookies from 'universal-cookie';\n\nimport dataFetch from '../../../utils/dataFetch';\nimport Statsdash from './Statsdash';\nimport Doughnut from './Doughnut';\n\nconst { RangePicker } = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\n\nconst Overview2 = () => {\n  const usernamecookie=cookies.get('username');\n  const [data, setData] = useState([]);\n  const [dailyLogData, setDailyLogData] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [pieData, setPieData] = useState([]);\n  var numberDays=7;\n\n  const [userName,setUserName] = useState([]);\n  const [days,setDays] = useState(numberDays);\n  const [given,setGiven] = useState(0);\n  const [notGiven,setNotGiven] = useState(0);\n\n  const [rangeLoaded, setRangeLoaded] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const[firstCounter,setFirstCounter] = useState(0);\n  const[lastCounter,setLastCounter] = useState(0);\n\n  const [kickedCount, setKickedCount] = useState(0);\n  const prevIsKickedRef = useRef(false);\n\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n\n  const query2 = `query($date: Date!) {\n  getStatusUpdates(date: $date) {\n    message\n    member {\n      username\n      lastStatusUpdate\n    }\n    date\n    timestamp\n  }\n}\n`;\n  const dummyData = {\n    data: {\n      getStatusUpdates: [\n        {\n          message: \"Dummy message 1\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-08\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 2\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-09\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 1\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-10\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 2\",\n          member: {\n            username: \"dummy_username2\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-11\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        // Add 10 more dummy data objects\n        {\n          message: \"Dummy message 3\",\n          member: {\n            username: \"dummy_username3\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-12\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 4\",\n          member: {\n            username: \"dummy_username4\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-12\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 5\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-13\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"dummy_username6\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-14\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"dummy_username6\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-15\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"dummy_username6\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-16\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-17\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"h\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-18\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"h\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-19\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"g\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-20\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 6\",\n          member: {\n            username: \"aashraya\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-21\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n      ],\n    },\n  };\n\n\n  // const fetchData = async (variables) => dataFetch({ query, variables });\n  const fetchDashData = async (variables) => dataFetch({ query:query2, variables });\n\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays=7;\n    }\n\n    // console.log(moment(endDate).diff(moment(startDate), 'days'));\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD'),\n      };\n\n      fetchData(variables).then((r) => {\n        // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n        r.data.clubStatusUpdate.memberStats.map((item)=> {\n          if(item.user.username === \"aashraya\") {\n            var start = moment(startDate);\n            var end = moment(endDate);\n            const arr=[['status', 'count'],\n              ['Updates given'],\n              ['Not given'],];\n            numberDays=moment(end).diff(moment(start), 'days');\n            setDays(numberDays);\n            arr[1].push(parseInt(item.statusCount));\n            setGiven(item.statusCount);\n            arr[2].push(numberDays-item.statusCount);\n            setNotGiven(numberDays-item.statusCount);\n            setPieData(arr);\n            // console.log(arr);\n            // console.log(item.statusCount);\n          }\n        });\n\n\n\n\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n\n      function getDates(startDate, endDate) {\n\n        const dates = [];\n        let currentDate = startDate;\n\n        dates.push(currentDate);\n\n        const addDays = function (days) {\n          const date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n\n        while (currentDate < endDate) {\n\n          currentDate = addDays.call(currentDate, 1);\n          dates.push(currentDate);\n        }\n        return dates;\n      }\n\n\n      const dates = getDates(startDate, endDate);\n\n      setFirstCounter(0)\n      setLastCounter(0)\n      setKickedCount(0)\n      dates.forEach(function (date) {\n\n\n          let isKicked = false;\n\n        const curdate = {\n          date:moment(date).format('YYYY-MM-DD'),\n\n        }\n        let missedUpdates = 0;\n\n// Inside the forEach loop\n          fetchDashData(curdate).then((s) => {\n\n          s.data.getStatusUpdates.forEach((statusUpdate) => {\n          if (statusUpdate.member.username === \"aashraya\") {\n            missedUpdates = 0;\n            isKicked= false;\n          } else {\n            missedUpdates++;\n            if (missedUpdates === 3) {\n              isKicked = true;\n            }\n          }\n        });\n          if (isKicked !== prevIsKickedRef.current) {\n            prevIsKickedRef.current = isKicked;\n            if (isKicked) {\n              setKickedCount((prevCount) => prevCount + 1);\n            }\n          }\n        console.log(isKicked)\n        console.log(kickedCount)});\n        fetchDashData(curdate).then((s) => {\n          console.log(s)\n\n\n\n          console.log(\"isKicked:\", isKicked);\n          console.log(\"kickedCount:\", kickedCount);\n          if(s.data.getStatusUpdates[0].member.username === \"aashraya\"){\n            setFirstCounter((prevState)=>prevState+1);\n          }\n          if(s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\"){\n            setLastCounter((prevState)=>prevState+1);\n          }\n          console.log(s.data.getStatusUpdates[0].member.username)\n          console.log(s.data.getStatusUpdates.slice(-1)[0].member.username)\n\n          setLoaded(true);\n\n        }\n        );\n\n\n\n      });\n    }\n  },[startDate,endDate]);\n\n\n\n  const handleRangeChange = (obj) => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays=moment(endDate).diff(moment(startDate), 'days');\n\n    }\n    // console.log(numberDays);\n\n  };\n\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"mx-2\">\n        <div className=\"row m-0\">\n          <div className=\"col text-right\">\n            <RangePicker\n              defaultValue={[\n                moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'),\n                moment(new Date(), 'YYYY-MM-DD'),\n              ]}\n              onChange={handleRangeChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row m-0\">\n        <div className=\"col-md-7 p-2\">\n          <Card style={{ boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            <div class=\"flex-container\"\n                 style={{ display:'flex', flexBasis: 0 }}>\n              <div class=\"flex-child yellow\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{days}</h3>\n                <h7>Total number of days</h7>\n              </div>\n              <div class=\"flex-child red\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{given}</h3>\n                <h7>Updates given</h7>\n              </div>\n              <div class=\"flex-child blue\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{notGiven}</h3>\n                <h7>Updates missed</h7>\n              </div>\n            </div>\n          </Card>\n          <Card style={{ boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)', marginTop: '20px'}}>\n            <div><p>Number of times updated first:{firstCounter}</p></div>\n            <div><p>Number of times updated last:{lastCounter}</p></div>\n            <div><p>Number of times got kicked:{kickedCount}</p></div>\n          </Card>\n        </div>\n        <div className=\"col-md-5 p-2\">\n          <Card style={{backgroundColor: '#FFFFFF', boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            {/*<Doughnut pdata={pieData}/>*/}\n          </Card>\n        </div>\n        <div className=\"col-md-12 p-2\">\n          <Card style={{backgroundColor: '#FFFFFF', boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            {/*<Statsdash data={data} isLoaded={true} />*/}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}