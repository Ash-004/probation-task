{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Cookies from 'universal-cookie';\n\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport dataFetch from '../../../utils/dataFetch';\nimport Rankings from './Ranking';\nimport TrendStatusGraph from './TrendStatusGraph';\nimport StatusGraph from './StatusGraph';\nconst {\n  RangePicker\n} = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\nconst Overview = () => {\n  const usernamecookie = cookies.get('username');\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: dailyLogData,\n    1: setDailyLogData\n  } = useState([]);\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(new Date());\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState(new Date());\n  const {\n    0: rangeLoaded,\n    1: setRangeLoaded\n  } = useState(false);\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n  const fetchData = async variables => dataFetch({\n    query,\n    variables\n  });\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n    }\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD')\n      };\n      fetchData(variables).then(r => {\n        r.data.clubStatusUpdate.memberStats.map(item => {\n          if (item.user.username === usernamecookie) {\n            // setUserName(item.user.username);\n            // console.log(item.statusCount);\n          }\n        });\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n    }\n  });\n  const handleRangeChange = obj => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(obj[0]);\n      setEndDate(obj[1]);\n      setLoaded(false);\n    }\n  };\n  return __jsx(\"div\", {\n    className: \"p-4\"\n  }, __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col text-right\"\n  }, __jsx(RangePicker, {\n    defaultValue: [moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'), moment(new Date(), 'YYYY-MM-DD')],\n    onChange: handleRangeChange\n  })))), __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12 p-2\"\n  }, __jsx(TrendStatusGraph, {\n    data: data,\n    isLoaded: isLoaded\n  })), __jsx(\"div\", {\n    className: \"col-md-8 p-2\"\n  }, __jsx(StatusGraph, {\n    dailyLogData: dailyLogData,\n    isLoaded: isLoaded\n  })), __jsx(\"div\", {\n    className: \"col-md-4 p-2\"\n  }, __jsx(Rankings, {\n    isRangeSet: rangeLoaded,\n    startDate: startDate,\n    endDate: endDate\n  }))));\n};\nexport default Overview;","map":{"version":3,"names":["React","useEffect","useState","Moment","extendMoment","Cookies","DatePicker","dataFetch","Rankings","TrendStatusGraph","StatusGraph","RangePicker","moment","cookies","Overview","usernamecookie","get","data","setData","dailyLogData","setDailyLogData","startDate","setStartDate","Date","endDate","setEndDate","rangeLoaded","setRangeLoaded","isLoaded","setLoaded","query","fetchData","variables","subtract","format","then","r","clubStatusUpdate","memberStats","map","item","user","username","dailyLog","handleRangeChange","obj","__jsx","className","defaultValue","onChange","isRangeSet"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/Overview.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Cookies from 'universal-cookie';\n\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\n\nimport dataFetch from '../../../utils/dataFetch';\nimport Rankings from './Ranking';\nimport TrendStatusGraph from './TrendStatusGraph';\nimport StatusGraph from './StatusGraph';\n\nconst { RangePicker } = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\n\nconst Overview = () => {\n  const usernamecookie=cookies.get('username');\n  const [data, setData] = useState([]);\n  const [dailyLogData, setDailyLogData] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [rangeLoaded, setRangeLoaded] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n\n  const fetchData = async (variables) => dataFetch({ query, variables });\n\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n    }\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD'),\n      };\n      fetchData(variables).then((r) => {\n        r.data.clubStatusUpdate.memberStats.map((item)=> {\n          if (item.user.username === usernamecookie) {\n            // setUserName(item.user.username);\n            // console.log(item.statusCount);\n\n          }\n        });\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n    }\n  });\n \n  const handleRangeChange = (obj) => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(obj[0]);\n      setEndDate(obj[1]);\n      setLoaded(false);\n    }\n\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"mx-2\">\n        <div className=\"row m-0\">\n          <div className=\"col text-right\">\n            <RangePicker\n              defaultValue={[\n                moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'),\n                moment(new Date(), 'YYYY-MM-DD'),\n              ]}\n              onChange={handleRangeChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row m-0\">\n        <div className=\"col-md-12 p-2\">\n          <TrendStatusGraph data={data} isLoaded={isLoaded} />\n        </div>\n        <div className=\"col-md-8 p-2\">\n          <StatusGraph dailyLogData={dailyLogData} isLoaded={isLoaded} />\n        </div>\n        <div className=\"col-md-4 p-2\">\n          <Rankings\n            isRangeSet={rangeLoaded}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}