{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\nvar StatusGraph = function StatusGraph(_ref) {\n  var isLoaded = _ref.isLoaded,\n    dailyLogData = _ref.dailyLogData;\n  var options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: '#f5f5f5',\n      titleFontColor: '#333',\n      bodyFontColor: '#666',\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: 'nearest',\n      intersect: 0,\n      position: 'nearest'\n    },\n    responsive: true,\n    scales: {\n      yAxes: [{\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: 'rgba(29,140,248,0.0)',\n          zeroLineColor: 'transparent'\n        },\n        ticks: {\n          suggestedMin: 0,\n          suggestedMax: 5,\n          padding: 20,\n          fontColor: '#9a9a9a'\n        }\n      }],\n      xAxes: [{\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: 'rgba(29,140,248,0.1)',\n          zeroLineColor: 'transparent'\n        },\n        ticks: {\n          padding: 20,\n          fontColor: '#9a9a9a'\n        }\n      }]\n    }\n  };\n  var x = [];\n  var y = [];\n  dailyLogData.map(function (r) {\n    x.push(r.date);\n    y.push(r.membersSentCount);\n  });\n  var statusGraph = {\n    data: function data(canvas) {\n      var ctx = canvas.getContext('2d');\n      var gradientStroke = ctx.createLinearGradient(0, 2300, 0, 50);\n      gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\n      gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\n      gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\n\n      return {\n        labels: x,\n        datasets: [{\n          label: 'Status Graph',\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: '#1f8ef1',\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: '#1f8ef1',\n          pointBorderColor: 'rgba(255,255,255,0)',\n          pointHoverBackgroundColor: '#1f8ef1',\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: y\n        }]\n      };\n    }\n  };\n  return __jsx(Card, null, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, __jsx(\"h5\", {\n    className: \"mb-4 bp3-heading\"\n  }, \"Status Trends\"))), __jsx(\"div\", {\n    className: classnames(!isLoaded ? 'bp3-skeleton' : null),\n    style: {\n      width: '100%',\n      height: '50vh',\n      padding: '5px'\n    }\n  }, isLoaded ? __jsx(Line, {\n    data: statusGraph.data,\n    options: options\n  }) : null));\n};\n_c = StatusGraph;\nStatusGraph.propTypes = {\n  isLoaded: PropTypes.bool,\n  dailyLogData: PropTypes.array\n};\nexport default StatusGraph;\nvar _c;\n$RefreshReg$(_c, \"StatusGraph\");","map":{"version":3,"names":["React","classnames","Line","PropTypes","Card","StatusGraph","_ref","isLoaded","dailyLogData","options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","x","y","map","r","push","date","membersSentCount","statusGraph","data","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","__jsx","className","style","width","height","_c","propTypes","bool","array","$RefreshReg$"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/StatusGraph.js"],"sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\n\nconst StatusGraph = ({ isLoaded, dailyLogData }) => {\n  let options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      backgroundColor: '#f5f5f5',\n      titleFontColor: '#333',\n      bodyFontColor: '#666',\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: 'nearest',\n      intersect: 0,\n      position: 'nearest',\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: 'transparent',\n          },\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 5,\n            padding: 20,\n            fontColor: '#9a9a9a',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: 'transparent',\n          },\n          ticks: {\n            padding: 20,\n            fontColor: '#9a9a9a',\n          },\n        },\n      ],\n    },\n  };\n\n  const x = [];\n  const y = [];\n  dailyLogData.map((r) => {\n    x.push(r.date);\n    y.push(r.membersSentCount);\n  });\n  let statusGraph = {\n    data: (canvas) => {\n      let ctx = canvas.getContext('2d');\n\n      let gradientStroke = ctx.createLinearGradient(0, 2300, 0, 50);\n\n      gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\n      gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\n      gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\n\n      return {\n        labels: x,\n        datasets: [\n          {\n            label: 'Status Graph',\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: '#1f8ef1',\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: '#1f8ef1',\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: '#1f8ef1',\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: y,\n          },\n        ],\n      };\n    },\n  };\n\n  return (\n    <Card>\n      <div className=\"row m-0\">\n        <div className=\"col-md-8\">\n          <h5 className=\"mb-4 bp3-heading\">Status Trends</h5>\n        </div>\n      </div>\n      <div\n        className={classnames(!isLoaded ? 'bp3-skeleton' : null)}\n        style={{ width: '100%', height: '50vh', padding: '5px' }}\n      >\n        {isLoaded ? <Line data={statusGraph.data} options={options} /> : null}\n      </div>\n    </Card>\n  );\n};\n\nStatusGraph.propTypes = {\n  isLoaded: PropTypes.bool,\n  dailyLogData: PropTypes.array,\n};\n\nexport default StatusGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}