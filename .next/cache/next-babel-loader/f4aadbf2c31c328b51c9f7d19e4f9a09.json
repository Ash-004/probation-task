{"ast":null,"code":"var _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\nvar TrendStatusGraph = function TrendStatusGraph(_ref) {\n  _s();\n  var isLoaded = _ref.isLoaded,\n    data = _ref.data;\n  var x2019 = [];\n  var y2019 = [];\n  var x2018 = [];\n  var y2018 = [];\n  var x2017 = [];\n  var y2017 = [];\n  var x2016 = [];\n  var y2016 = [];\n  data.map(function (d) {\n    if (d.user.admissionYear === 2021) {\n      x2019.push(d.statusCount);\n      y2019.push(d.user.username);\n    } else if (d.user.admissionYear === 2020) {\n      x2018.push(d.statusCount);\n      y2018.push(d.user.username);\n    } else if (d.user.admissionYear === 2019) {\n      x2017.push(d.statusCount);\n      y2017.push(d.user.username);\n    } else {\n      x2016.push(d.statusCount);\n      y2016.push(d.user.username);\n    }\n  });\n  var _useState = useState('2021'),\n    year = _useState[0],\n    setYear = _useState[1];\n  var graph = {\n    data: function data(canvas) {\n      var ctx = canvas.getContext('2d');\n      var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n      gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\n      gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\n      gradientStroke.addColorStop(0, 'rgba(29,140,248,0)');\n      return {\n        labels: year === '2021' ? y2019 : year === '2020' ? y2018 : year === '2019' ? y2017 : y2016,\n        datasets: [{\n          label: 'Status Updates Sent',\n          fill: true,\n          backgroundColor: '#1f8ef1',\n          hoverBackgroundColor: gradientStroke,\n          borderColor: '#1f8ef1',\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: year === '2021' ? x2019 : year === '2020' ? x2018 : year === '2019' ? x2017 : x2016\n        }]\n      };\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: 'nearest',\n        intersect: 0,\n        position: 'nearest'\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: 'transparent'\n          },\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 5,\n            padding: 20,\n            fontColor: '#9a9a9a'\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(225,78,202,0.1)',\n            zeroLineColor: 'transparent'\n          },\n          ticks: {\n            padding: 20,\n            fontColor: '#9e9e9e'\n          }\n        }]\n      }\n    }\n  };\n  return __jsx(Card, null, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-10\"\n  }, __jsx(\"h5\", {\n    className: \"mb-4 bp3-heading\"\n  }, \"Member Status Update Trends\")), __jsx(\"div\", {\n    className: \"col text-right p-3\"\n  }, __jsx(\"select\", {\n    style: {\n      width: '100%',\n      height: '4vh'\n    },\n    onChange: function onChange(e) {\n      return setYear(e.currentTarget.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"2021\",\n    selected: true\n  }, \"2021\"), __jsx(\"option\", {\n    value: \"2020\"\n  }, \"2020\"), __jsx(\"option\", {\n    value: \"2019\"\n  }, \"2019\"), __jsx(\"option\", {\n    value: \"2018\"\n  }, \"2018\")))), __jsx(\"div\", {\n    className: classnames(!isLoaded ? 'bp3-skeleton' : null),\n    style: {\n      padding: '5px',\n      width: '100%',\n      height: '50vh'\n    }\n  }, isLoaded ? __jsx(Bar, {\n    data: graph.data,\n    options: graph.options\n  }) : null));\n};\n_s(TrendStatusGraph, \"Elf4Dre7jwxyigbeQOzhFz42KH4=\");\n_c = TrendStatusGraph;\nTrendStatusGraph.propTypes = {\n  data: PropTypes.object,\n  isLoaded: PropTypes.bool\n};\nexport default TrendStatusGraph;\nvar _c;\n$RefreshReg$(_c, \"TrendStatusGraph\");","map":{"version":3,"names":["React","useState","classnames","Bar","PropTypes","Card","TrendStatusGraph","_ref","_s","isLoaded","data","x2019","y2019","x2018","y2018","x2017","y2017","x2016","y2016","map","d","user","admissionYear","push","statusCount","username","_useState","year","setYear","graph","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","labels","datasets","label","fill","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","options","maintainAspectRatio","legend","display","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","__jsx","className","style","width","height","onChange","e","currentTarget","value","selected","_c","propTypes","object","bool","$RefreshReg$"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/TrendStatusGraph.js"],"sourcesContent":["import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\n\nconst TrendStatusGraph = ({ isLoaded, data }) => {\n  const x2019 = [];\n  const y2019 = [];\n  const x2018 = [];\n  const y2018 = [];\n  const x2017 = [];\n  const y2017 = [];\n  const x2016 = [];\n  const y2016 = [];\n\n  data.map((d) => {\n    if (d.user.admissionYear === 2021) {\n      x2019.push(d.statusCount);\n      y2019.push(d.user.username);\n    } else if (d.user.admissionYear === 2020) {\n      x2018.push(d.statusCount);\n      y2018.push(d.user.username);\n    } else if (d.user.admissionYear === 2019) {\n      x2017.push(d.statusCount);\n      y2017.push(d.user.username);\n    } else {\n      x2016.push(d.statusCount);\n      y2016.push(d.user.username);\n    }\n  });\n  const [year, setYear] = useState('2021');\n  let graph = {\n    data: (canvas) => {\n      let ctx = canvas.getContext('2d');\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\n      gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\n      gradientStroke.addColorStop(0, 'rgba(29,140,248,0)');\n\n      return {\n        labels:\n          year === '2021'\n            ? y2019\n            : year === '2020'\n            ? y2018\n            : year === '2019'\n            ? y2017\n            : y2016,\n        datasets: [\n          {\n            label: 'Status Updates Sent',\n            fill: true,\n            backgroundColor: '#1f8ef1',\n            hoverBackgroundColor: gradientStroke,\n            borderColor: '#1f8ef1',\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data:\n              year === '2021'\n                ? x2019\n                : year === '2020'\n                ? x2018\n                : year === '2019'\n                ? x2017\n                : x2016,\n          },\n        ],\n      };\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: 'nearest',\n        intersect: 0,\n        position: 'nearest',\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: 'rgba(29,140,248,0.0)',\n              zeroLineColor: 'transparent',\n            },\n            ticks: {\n              suggestedMin: 0,\n              suggestedMax: 5,\n              padding: 20,\n              fontColor: '#9a9a9a',\n            },\n          },\n        ],\n        xAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: 'rgba(225,78,202,0.1)',\n              zeroLineColor: 'transparent',\n            },\n            ticks: {\n              padding: 20,\n              fontColor: '#9e9e9e',\n            },\n          },\n        ],\n      },\n    },\n  };\n  return (\n    <Card>\n      <div className=\"row m-0\">\n        <div className=\"col-md-10\">\n          <h5 className=\"mb-4 bp3-heading\">Member Status Update Trends</h5>\n        </div>\n        <div className=\"col text-right p-3\">\n          <select\n            style={{ width: '100%', height: '4vh' }}\n            onChange={(e) => setYear(e.currentTarget.value)}\n          >\n            <option value=\"2021\" selected>\n              2021\n            </option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n            <option value=\"2018\">2018</option>\n          </select>\n        </div>\n      </div>\n      <div\n        className={classnames(!isLoaded ? 'bp3-skeleton' : null)}\n        style={{ padding: '5px', width: '100%', height: '50vh' }}\n      >\n        {isLoaded ? <Bar data={graph.data} options={graph.options} /> : null}\n      </div>\n    </Card>\n  );\n};\n\nTrendStatusGraph.propTypes = {\n  data: PropTypes.object,\n  isLoaded: PropTypes.bool,\n};\n\nexport default TrendStatusGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}