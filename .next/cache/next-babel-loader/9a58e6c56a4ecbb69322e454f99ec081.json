{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Cookies from 'universal-cookie';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Checkbox from 'antd/lib/checkbox';\nimport Input from 'antd/lib/input';\nimport dataFetch from '../../utils/dataFetch';\nimport { TokenAuth as query } from '../../utils/mutations';\nconst cookies = new Cookies();\nconst LoginForm = () => {\n  const router = useRouter();\n  const {\n    0: cookiesSet,\n    1: setCookies\n  } = useState(false);\n  const {\n    0: authFail,\n    1: setAuthFail\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    const token = cookies.get('token');\n    if (token != null) {\n      setCookies(true);\n      router.push('/');\n    }\n  });\n  const login = async variables => await dataFetch({\n    query,\n    variables\n  });\n  const onFinish = values => {\n    login(values).then(response => {\n      if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n        const tokenMaxAge = response.data.tokenAuth.payload.exp - response.data.tokenAuth.payload.origIat;\n        cookies.set('token', response.data.tokenAuth.token, {\n          path: '/',\n          maxAge: tokenMaxAge\n        });\n        cookies.set('refreshToken', response.data.tokenAuth.refreshToken, {\n          path: '/',\n          maxAge: response.data.tokenAuth.refreshExpiresIn\n        });\n        cookies.set('username', values.username, {\n          path: '/'\n        });\n        cookies.set('expiry', response.data.tokenAuth.payload.exp);\n        setCookies(true);\n        router.push('/');\n      } else {\n        setAuthFail(true);\n        setLoading(false);\n      }\n    });\n  };\n  const errorMessage = __jsx(\"div\", {\n    className: \"alert alert-danger\"\n  }, \"Please enter vaild credentials\");\n  const onFinishFailed = errorInfo => {\n    console.error(errorInfo);\n  };\n  return !loading ? __jsx(Card, {\n    className: \"login-card\"\n  }, __jsx(\"img\", {\n    src: \"/static/images/cms_logo.png\",\n    className: \"w-100 my-4\",\n    alt: \"CMS Logo\"\n  }), authFail ? errorMessage : null, __jsx(Form, {\n    className: \"login-form\",\n    layout: \"vertical\",\n    name: \"login-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    label: \"Username\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }]\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    placeholder: \"Username\"\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  }, __jsx(Input.Password, {\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    type: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(Form.Item, {\n    name: \"remember\",\n    valuePropName: \"checked\"\n  }, __jsx(Checkbox, null, \"Remember me\")), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-block login-form-button\"\n  }, \"Log in\")), __jsx(Link, {\n    href: \"/reset-password\"\n  }, \"Forgot Password?\")), __jsx(Link, {\n    href: \"/register\"\n  }, \"Don't have account? Register\")) : __jsx(\"h1\", null, \"Loading\");\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useEffect","useState","useRouter","Cookies","UserOutlined","LockOutlined","Link","Card","Button","Form","Checkbox","Input","dataFetch","TokenAuth","query","cookies","LoginForm","router","cookiesSet","setCookies","authFail","setAuthFail","loading","setLoading","token","get","push","login","variables","onFinish","values","then","response","Object","prototype","hasOwnProperty","call","tokenMaxAge","data","tokenAuth","payload","exp","origIat","set","path","maxAge","refreshToken","refreshExpiresIn","username","errorMessage","__jsx","className","onFinishFailed","errorInfo","console","error","src","alt","layout","name","initialValues","remember","Item","label","rules","required","message","prefix","placeholder","Password","type","valuePropName","htmlType","href"],"sources":["/home/ash/react projects/amFOSS-webapp/components/login/loginForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Cookies from 'universal-cookie';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Checkbox from 'antd/lib/checkbox';\nimport Input from 'antd/lib/input';\n\nimport dataFetch from '../../utils/dataFetch';\nimport { TokenAuth as query } from '../../utils/mutations';\n\nconst cookies = new Cookies();\n\nconst LoginForm = () => {\n  const router = useRouter();\n  const [cookiesSet, setCookies] = useState(false);\n  const [authFail, setAuthFail] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const token = cookies.get('token');\n    if (token != null) {\n      setCookies(true);\n      router.push('/');\n    }\n  });\n\n  const login = async (variables) => await dataFetch({ query, variables });\n\n  const onFinish = (values) => {\n    login(values).then((response) => {\n      if (!Object.prototype.hasOwnProperty.call(response, 'errors')) {\n        const tokenMaxAge =\n          response.data.tokenAuth.payload.exp -\n          response.data.tokenAuth.payload.origIat;\n        cookies.set('token', response.data.tokenAuth.token, {\n          path: '/',\n          maxAge: tokenMaxAge,\n        });\n        cookies.set('refreshToken', response.data.tokenAuth.refreshToken, {\n          path: '/',\n          maxAge: response.data.tokenAuth.refreshExpiresIn,\n        });\n        cookies.set('username', values.username, { path: '/' });\n        cookies.set('expiry', response.data.tokenAuth.payload.exp);\n        setCookies(true);\n        router.push('/');\n      } else {\n        setAuthFail(true);\n        setLoading(false);\n      }\n    });\n  };\n\n  const errorMessage = (\n    <div className=\"alert alert-danger\">Please enter vaild credentials</div>\n  );\n\n  const onFinishFailed = (errorInfo) => {\n    console.error(errorInfo);\n  };\n\n  return !loading ? (\n    <Card className=\"login-card\">\n      <img src=\"/static/images/cms_logo.png\" className=\"w-100 my-4\" alt=\"CMS Logo\" />\n      {authFail ? errorMessage : null}\n      <Form\n        className=\"login-form\"\n        layout=\"vertical\"\n        name=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          name=\"username\"\n          label=\"Username\"\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[{ required: true, message: 'Please input your Password!' }]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"btn-block login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n        <Link href=\"/reset-password\">Forgot Password?</Link>\n\n      </Form>\n      <Link href=\"/register\">Don't have account? Register</Link>\n\n    </Card>\n  ) : (\n    <h1>Loading</h1>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}