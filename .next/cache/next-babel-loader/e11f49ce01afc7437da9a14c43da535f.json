{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useEffect, useState } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Base from '../../components/base';\nimport DailyStatusReportCard from '../../modules/statusUpdates/components/DailyStatusReportCard';\nimport dataFetch from '../../utils/dataFetch';\nimport TitleBar from '../../components/titlebar';\nconst moment = extendMoment(Moment);\nconst DailyStatusReport = props => {\n  const {\n    0: data,\n    1: setData\n  } = useState('');\n  const {\n    0: date,\n    1: setDate\n  } = useState(moment().subtract(1, 'days').format('YYYY-MM-DD'));\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const query = `query($date:Date!){\n  dailyStatusUpdates(date:$date){\n    date\n    membersSent{\n      member{\n        username\n        fullName\n        statusUpdateCount\n        profile{\n          profilePic\n        }\n        avatar{\n          githubUsername\n        }\n      }\n    }\n    memberDidNotSend{\n      member{\n        username\n        fullName\n        statusUpdateCount\n        profile{\n          profilePic\n        }\n        avatar{\n          githubUsername\n        }\n      }\n    }\n  }\n}`;\n  const fetchData = async variables => dataFetch({\n    query,\n    variables\n  });\n  useEffect(() => {\n    if (!isLoaded) {\n      fetchData({\n        date\n      }).then(r => {\n        setData(r.data.dailyStatusUpdates);\n        setLoaded(true);\n      });\n    }\n  });\n  const routes = [{\n    path: '/',\n    name: 'Home'\n  }, {\n    path: '/status-update',\n    name: 'Status Update'\n  }, {\n    path: '/status-update/daily-report',\n    name: 'Daily Report'\n  }];\n  return __jsx(Base, _extends({\n    title: \"Daily Report | Status Updates\"\n  }, props), __jsx(TitleBar, {\n    routes: routes,\n    title: \"Daily Report\",\n    subTitle: \"View daily status update report of club members\"\n  }), __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-10 p-2\"\n  }), __jsx(\"div\", {\n    className: \"col p-2\"\n  }, __jsx(DatePicker, {\n    size: \"large\",\n    onChange: e => {\n      setLoaded(false);\n      setDate(e.format('YYYY-MM-DD'));\n    },\n    format: \"DD-MM-YYYY\",\n    value: moment(date)\n  }))), __jsx(\"div\", {\n    className: \"p-2\"\n  }, __jsx(DailyStatusReportCard, {\n    data: data,\n    isLoaded: isLoaded,\n    date: date\n  })));\n};\nexport default DailyStatusReport;","map":{"version":3,"names":["React","useEffect","useState","Moment","extendMoment","DatePicker","Base","DailyStatusReportCard","dataFetch","TitleBar","moment","DailyStatusReport","props","data","setData","date","setDate","subtract","format","isLoaded","setLoaded","query","fetchData","variables","then","r","dailyStatusUpdates","routes","path","name","__jsx","_extends","title","subTitle","className","size","onChange","e","value"],"sources":["/home/ash/react projects/amFOSS-webapp/pages/status-updates/daily-report.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\n\nimport Base from '../../components/base';\nimport DailyStatusReportCard from '../../modules/statusUpdates/components/DailyStatusReportCard';\nimport dataFetch from '../../utils/dataFetch';\nimport TitleBar from '../../components/titlebar';\n\nconst moment = extendMoment(Moment);\n\nconst DailyStatusReport = (props) => {\n  const [data, setData] = useState('');\n  const [date, setDate] = useState(\n    moment().subtract(1, 'days').format('YYYY-MM-DD')\n  );\n  const [isLoaded, setLoaded] = useState(false);\n\n  const query = `query($date:Date!){\n  dailyStatusUpdates(date:$date){\n    date\n    membersSent{\n      member{\n        username\n        fullName\n        statusUpdateCount\n        profile{\n          profilePic\n        }\n        avatar{\n          githubUsername\n        }\n      }\n    }\n    memberDidNotSend{\n      member{\n        username\n        fullName\n        statusUpdateCount\n        profile{\n          profilePic\n        }\n        avatar{\n          githubUsername\n        }\n      }\n    }\n  }\n}`;\n\n  const fetchData = async (variables) => dataFetch({ query, variables });\n\n  useEffect(() => {\n    if (!isLoaded) {\n      fetchData({ date }).then((r) => {\n        setData(r.data.dailyStatusUpdates);\n        setLoaded(true);\n      });\n    }\n  });\n\n  const routes = [\n    {\n      path: '/',\n      name: 'Home',\n    },\n    {\n      path: '/status-update',\n      name: 'Status Update',\n    },\n    {\n      path: '/status-update/daily-report',\n      name: 'Daily Report',\n    },\n  ];\n\n  return (\n    <Base title=\"Daily Report | Status Updates\" {...props}>\n      <TitleBar\n        routes={routes}\n        title=\"Daily Report\"\n        subTitle=\"View daily status update report of club members\"\n      />\n      <div className=\"row m-0\">\n        <div className=\"col-md-10 p-2\" />\n        <div className=\"col p-2\">\n          <DatePicker\n            size=\"large\"\n            onChange={(e) => {\n              setLoaded(false);\n              setDate(e.format('YYYY-MM-DD'));\n            }}\n            format=\"DD-MM-YYYY\"\n            value={moment(date)}\n          />\n        </div>\n      </div>\n      <div className=\"p-2\">\n        <DailyStatusReportCard data={data} isLoaded={isLoaded} date={date} />\n      </div>\n    </Base>\n  );\n};\n\nexport default DailyStatusReport;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,YAAY,QAAQ,cAAc;;AAE3C;AACA,OAAOC,UAAU,MAAM,sBAAsB;AAE7C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,qBAAqB,MAAM,8DAA8D;AAChG,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,QAAQ,MAAM,2BAA2B;AAEhD,MAAMC,MAAM,GAAGN,YAAY,CAACD,MAAM,CAAC;AAEnC,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAA,GAACC,IAAI;IAAA,GAAEC;EAAO,IAAIZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAA,GAACa,IAAI;IAAA,GAAEC;EAAO,IAAId,QAAQ,CAC9BQ,MAAM,EAAE,CAACO,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC,CAClD;EACD,MAAM;IAAA,GAACC,QAAQ;IAAA,GAAEC;EAAS,IAAIlB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMmB,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;EAEA,MAAMC,SAAS,GAAG,MAAOC,SAAS,IAAKf,SAAS,CAAC;IAAEa,KAAK;IAAEE;EAAU,CAAC,CAAC;EAEtEtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACkB,QAAQ,EAAE;MACbG,SAAS,CAAC;QAAEP;MAAK,CAAC,CAAC,CAACS,IAAI,CAAEC,CAAC,IAAK;QAC9BX,OAAO,CAACW,CAAC,CAACZ,IAAI,CAACa,kBAAkB,CAAC;QAClCN,SAAS,CAAC,IAAI,CAAC;MACjB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,MAAMO,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE;EACR,CAAC,EACD;IACED,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAE;EACR,CAAC,EACD;IACED,IAAI,EAAE,6BAA6B;IACnCC,IAAI,EAAE;EACR,CAAC,CACF;EAED,OACEC,KAAA,CAACxB,IAAI,EAAAyB,QAAA;IAACC,KAAK,EAAC;EAA+B,GAAKpB,KAAK,GACnDkB,KAAA,CAACrB,QAAQ;IACPkB,MAAM,EAAEA,MAAO;IACfK,KAAK,EAAC,cAAc;IACpBC,QAAQ,EAAC;EAAiD,EAC1D,EACFH,KAAA;IAAKI,SAAS,EAAC;EAAS,GACtBJ,KAAA;IAAKI,SAAS,EAAC;EAAe,EAAG,EACjCJ,KAAA;IAAKI,SAAS,EAAC;EAAS,GACtBJ,KAAA,CAACzB,UAAU;IACT8B,IAAI,EAAC,OAAO;IACZC,QAAQ,EAAGC,CAAC,IAAK;MACfjB,SAAS,CAAC,KAAK,CAAC;MAChBJ,OAAO,CAACqB,CAAC,CAACnB,MAAM,CAAC,YAAY,CAAC,CAAC;IACjC,CAAE;IACFA,MAAM,EAAC,YAAY;IACnBoB,KAAK,EAAE5B,MAAM,CAACK,IAAI;EAAE,EACpB,CACE,CACF,EACNe,KAAA;IAAKI,SAAS,EAAC;EAAK,GAClBJ,KAAA,CAACvB,qBAAqB;IAACM,IAAI,EAAEA,IAAK;IAACM,QAAQ,EAAEA,QAAS;IAACJ,IAAI,EAAEA;EAAK,EAAG,CACjE,CACD;AAEX,CAAC;AAED,eAAeJ,iBAAiB"},"metadata":{},"sourceType":"module"}