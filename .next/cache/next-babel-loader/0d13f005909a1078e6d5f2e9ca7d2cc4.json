{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Card from 'antd/lib/card';\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Cookies from 'universal-cookie';\nimport dataFetch from '../../../utils/dataFetch';\nimport Statsdash from './Statsdash';\nimport Doughnut from './Doughnut';\nconst {\n  RangePicker\n} = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\nconst Overview2 = () => {\n  const usernamecookie = cookies.get('username');\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: dailyLogData,\n    1: setDailyLogData\n  } = useState([]);\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(new Date());\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState(new Date());\n  const {\n    0: pieData,\n    1: setPieData\n  } = useState([]);\n  var numberDays = 7;\n  const {\n    0: userName,\n    1: setUserName\n  } = useState([]);\n  const {\n    0: days,\n    1: setDays\n  } = useState(numberDays);\n  const {\n    0: given,\n    1: setGiven\n  } = useState(0);\n  const {\n    0: notGiven,\n    1: setNotGiven\n  } = useState(0);\n  const {\n    0: rangeLoaded,\n    1: setRangeLoaded\n  } = useState(false);\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    0: firstCounter,\n    1: setFirstCounter\n  } = useState(0);\n  const {\n    0: lastCounter,\n    1: setLastCounter\n  } = useState(0);\n  const {\n    0: kickedCount,\n    1: setKickedCount\n  } = useState(0);\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n  const query2 = `query($date: Date!) {\n  getStatusUpdates(date: $date) {\n    message\n    member {\n      username\n      lastStatusUpdate\n    }\n    date\n    timestamp\n  }\n}\n`;\n  const dummyData = {\n    data: {\n      getStatusUpdates: [{\n        message: \"Dummy message 1\",\n        member: {\n          username: \"dummy_username1\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-16\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }, {\n        message: \"Dummy message 2\",\n        member: {\n          username: \"dummy_username2\",\n          lastStatusUpdate: \"2023-05-16T12:34:56Z\"\n        },\n        date: \"2023-05-16\",\n        timestamp: \"2023-05-16T12:34:56Z\"\n      }\n      // Add more dummy data as needed\n      ]\n    }\n  };\n\n  const fetchData = async variables => dataFetch({\n    query,\n    variables\n  });\n  const fetchDashData = async variables => dataFetch({\n    query: query2,\n    variables\n  });\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays = 7;\n    }\n\n    // console.log(moment(endDate).diff(moment(startDate), 'days'));\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD')\n      };\n      fetchData(variables).then(r => {\n        // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n        r.data.clubStatusUpdate.memberStats.map(item => {\n          if (item.user.username === \"aashraya\") {\n            var start = moment(startDate);\n            var end = moment(endDate);\n            const arr = [['status', 'count'], ['Updates given'], ['Not given']];\n            numberDays = moment(end).diff(moment(start), 'days');\n            setDays(numberDays);\n            arr[1].push(parseInt(item.statusCount));\n            setGiven(item.statusCount);\n            arr[2].push(numberDays - item.statusCount);\n            setNotGiven(numberDays - item.statusCount);\n            setPieData(arr);\n            // console.log(arr);\n            // console.log(item.statusCount);\n          }\n        });\n\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n      function getDates(startDate, endDate) {\n        const dates = [];\n        let currentDate = startDate;\n        dates.push(currentDate);\n        const addDays = function (days) {\n          const date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n        while (currentDate < endDate) {\n          currentDate = addDays.call(currentDate, 1);\n          dates.push(currentDate);\n        }\n        return dates;\n      }\n      const dates = getDates(startDate, endDate);\n      setFirstCounter(0);\n      setLastCounter(0);\n      dates.forEach(function (date) {\n        const curdate = {\n          date: moment(date).format('YYYY-MM-DD')\n        };\n        fetchDashData(curdate).then(s => {\n          console.log(s);\n          let missedUpdates = 0;\n          let isKicked = false;\n\n          // Inside the forEach loop\n          s.data.getStatusUpdates.forEach(statusUpdate => {\n            if (statusUpdate.member.username === \"aashraya\") {\n              missedUpdates = 0;\n              isKicked = false; // Reset missedUpdates counter when the username is found\n            } else {\n              missedUpdates++;\n              if (missedUpdates === 3) {\n                isKicked = true;\n                setKickedCount(prevCount => prevCount + 1); // Increase the kickedCount by one\n              }\n            }\n          });\n\n          // console.log(\"isKicked:\", isKicked);\n          // console.log(\"kickedCount:\", kickedCount);\n          // if(s.data.getStatusUpdates[0].member.username === \"aashraya\"){\n          //   setFirstCounter((prevState)=>prevState+1);\n          // }\n          // if(s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\"){\n          //   setLastCounter((prevState)=>prevState+1);\n          // }\n          // console.log(s.data.getStatusUpdates[0].member.username)\n          // console.log(s.data.getStatusUpdates.slice(-1)[0].member.username)\n          //\n          // setLoaded(true);\n        });\n      });\n    }\n  }, [startDate, endDate]);\n  const handleRangeChange = obj => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays = moment(endDate).diff(moment(startDate), 'days');\n    }\n    // console.log(numberDays);\n  };\n\n  return __jsx(\"div\", {\n    className: \"p-4\"\n  }, __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col text-right\"\n  }, __jsx(RangePicker, {\n    defaultValue: [moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'), moment(new Date(), 'YYYY-MM-DD')],\n    onChange: handleRangeChange\n  })))), __jsx(\"div\", {\n    className: \"row m-0\"\n  }, __jsx(\"div\", {\n    className: \"col-md-7 p-2\"\n  }, __jsx(Card, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(\"div\", {\n    class: \"flex-container\",\n    style: {\n      display: 'flex',\n      flexBasis: 0\n    }\n  }, __jsx(\"div\", {\n    class: \"flex-child yellow\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, days), __jsx(\"h7\", null, \"Total number of days\")), __jsx(\"div\", {\n    class: \"flex-child red\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, given), __jsx(\"h7\", null, \"Updates given\")), __jsx(\"div\", {\n    class: \"flex-child blue\",\n    style: {\n      flex: 1,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h3\", null, notGiven), __jsx(\"h7\", null, \"Updates missed\")))), __jsx(Card, {\n    style: {\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)',\n      marginTop: '20px'\n    }\n  }, __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated first:\", firstCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times updated last:\", lastCounter)), __jsx(\"div\", null, __jsx(\"p\", null, \"Number of times got kicked:\\u2620\")))), __jsx(\"div\", {\n    className: \"col-md-5 p-2\"\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(Doughnut, {\n    pdata: pieData\n  }))), __jsx(\"div\", {\n    className: \"col-md-12 p-2\"\n  }, __jsx(Card, {\n    style: {\n      backgroundColor: '#FFFFFF',\n      boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'\n    }\n  }, __jsx(Statsdash, {\n    data: data,\n    isLoaded: true\n  })))));\n};\nexport default Overview2;","map":{"version":3,"names":["React","useEffect","useState","Moment","extendMoment","Card","DatePicker","Cookies","dataFetch","Statsdash","Doughnut","RangePicker","moment","cookies","Overview2","usernamecookie","get","data","setData","dailyLogData","setDailyLogData","startDate","setStartDate","Date","endDate","setEndDate","pieData","setPieData","numberDays","userName","setUserName","days","setDays","given","setGiven","notGiven","setNotGiven","rangeLoaded","setRangeLoaded","isLoaded","setLoaded","firstCounter","setFirstCounter","lastCounter","setLastCounter","kickedCount","setKickedCount","query","query2","dummyData","getStatusUpdates","message","member","username","lastStatusUpdate","date","timestamp","fetchData","variables","fetchDashData","subtract","format","then","r","clubStatusUpdate","memberStats","map","item","user","start","end","arr","diff","push","parseInt","statusCount","dailyLog","getDates","dates","currentDate","addDays","valueOf","setDate","getDate","call","forEach","curdate","s","console","log","missedUpdates","isKicked","statusUpdate","prevCount","handleRangeChange","obj","__jsx","className","defaultValue","onChange","style","boxShadow","class","display","flexBasis","flex","textAlign","marginTop","backgroundColor","pdata"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/Overview2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport Card from 'antd/lib/card';\n// antd components\nimport DatePicker from 'antd/lib/date-picker';\nimport Cookies from 'universal-cookie';\n\nimport dataFetch from '../../../utils/dataFetch';\nimport Statsdash from './Statsdash';\nimport Doughnut from './Doughnut';\n\nconst { RangePicker } = DatePicker;\nconst moment = extendMoment(Moment);\nconst cookies = new Cookies();\n\nconst Overview2 = () => {\n  const usernamecookie=cookies.get('username');\n  const [data, setData] = useState([]);\n  const [dailyLogData, setDailyLogData] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [pieData, setPieData] = useState([]);\n  var numberDays=7;\n\n  const [userName,setUserName] = useState([]);\n  const [days,setDays] = useState(numberDays);\n  const [given,setGiven] = useState(0);\n  const [notGiven,setNotGiven] = useState(0);\n\n  const [rangeLoaded, setRangeLoaded] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const[firstCounter,setFirstCounter] = useState(0);\n  const[lastCounter,setLastCounter] = useState(0);\n\n  const [kickedCount, setKickedCount] = useState(0);\n\n  const query = `query ($startDate: Date!, $endDate: Date){\n  clubStatusUpdate(startDate: $startDate, endDate: $endDate){\n    dailyLog{\n      date\n      membersSentCount\n    }\n    memberStats{\n      user{\n        username\n        admissionYear\n      }\n      statusCount\n    }\n  }\n}`;\n\n  const query2 = `query($date: Date!) {\n  getStatusUpdates(date: $date) {\n    message\n    member {\n      username\n      lastStatusUpdate\n    }\n    date\n    timestamp\n  }\n}\n`;\n  const dummyData = {\n    data: {\n      getStatusUpdates: [\n        {\n          message: \"Dummy message 1\",\n          member: {\n            username: \"dummy_username1\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-16\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        {\n          message: \"Dummy message 2\",\n          member: {\n            username: \"dummy_username2\",\n            lastStatusUpdate: \"2023-05-16T12:34:56Z\",\n          },\n          date: \"2023-05-16\",\n          timestamp: \"2023-05-16T12:34:56Z\",\n        },\n        // Add more dummy data as needed\n      ],\n    },\n  };\n\n\n  const fetchData = async (variables) => dataFetch({ query, variables });\n  const fetchDashData = async (variables) => dataFetch({ query:query2, variables });\n\n  useEffect(() => {\n    if (!rangeLoaded) {\n      setStartDate(new Date(moment().subtract(1, 'weeks').format('YYYY-MM-DD')));\n      setRangeLoaded(true);\n      numberDays=7;\n    }\n\n    // console.log(moment(endDate).diff(moment(startDate), 'days'));\n    if (!isLoaded && rangeLoaded) {\n      const variables = {\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(endDate).format('YYYY-MM-DD'),\n      };\n\n      fetchData(variables).then((r) => {\n        // setUserName(r.data.clubStatusUpdate.memberStats.usernamecookie);\n        r.data.clubStatusUpdate.memberStats.map((item)=> {\n          if(item.user.username === \"aashraya\") {\n            var start = moment(startDate);\n            var end = moment(endDate);\n            const arr=[['status', 'count'],\n              ['Updates given'],\n              ['Not given'],];\n            numberDays=moment(end).diff(moment(start), 'days');\n            setDays(numberDays);\n            arr[1].push(parseInt(item.statusCount));\n            setGiven(item.statusCount);\n            arr[2].push(numberDays-item.statusCount);\n            setNotGiven(numberDays-item.statusCount);\n            setPieData(arr);\n            // console.log(arr);\n            // console.log(item.statusCount);\n          }\n        });\n\n\n\n\n        setData(r.data.clubStatusUpdate.memberStats);\n        setDailyLogData(r.data.clubStatusUpdate.dailyLog);\n        setLoaded(true);\n      });\n\n      function getDates(startDate, endDate) {\n\n        const dates = [];\n        let currentDate = startDate;\n\n        dates.push(currentDate);\n\n        const addDays = function (days) {\n          const date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n\n        while (currentDate < endDate) {\n\n          currentDate = addDays.call(currentDate, 1);\n          dates.push(currentDate);\n        }\n        return dates;\n      }\n\n\n      const dates = getDates(startDate, endDate);\n\n      setFirstCounter(0)\n      setLastCounter(0)\n      dates.forEach(function (date) {\n\n\n\n        const curdate = {\n          date:moment(date).format('YYYY-MM-DD'),\n        }\n        fetchDashData(curdate).then((s) => {\n          console.log(s)\n\n          let missedUpdates = 0;\n          let isKicked = false;\n\n// Inside the forEach loop\n          s.data.getStatusUpdates.forEach((statusUpdate) => {\n            if (statusUpdate.member.username === \"aashraya\") {\n              missedUpdates = 0;\n              isKicked= false;// Reset missedUpdates counter when the username is found\n            } else {\n              missedUpdates++;\n              if (missedUpdates === 3) {\n                isKicked = true;\n                setKickedCount((prevCount) => prevCount + 1); // Increase the kickedCount by one\n              }\n            }\n          });\n\n          // console.log(\"isKicked:\", isKicked);\n          // console.log(\"kickedCount:\", kickedCount);\n          // if(s.data.getStatusUpdates[0].member.username === \"aashraya\"){\n          //   setFirstCounter((prevState)=>prevState+1);\n          // }\n          // if(s.data.getStatusUpdates.slice(-1)[0].member.username === \"aashraya\"){\n          //   setLastCounter((prevState)=>prevState+1);\n          // }\n          // console.log(s.data.getStatusUpdates[0].member.username)\n          // console.log(s.data.getStatusUpdates.slice(-1)[0].member.username)\n          //\n          // setLoaded(true);\n\n        });\n\n\n\n      });\n    }\n  },[startDate,endDate]);\n\n\n\n  const handleRangeChange = (obj) => {\n    if (obj[0] != null && obj[1] != null) {\n      setStartDate(moment(obj[0]));\n      setEndDate(moment(obj[1]));\n      setLoaded(false);\n      numberDays=moment(endDate).diff(moment(startDate), 'days');\n\n    }\n    // console.log(numberDays);\n\n  };\n\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"mx-2\">\n        <div className=\"row m-0\">\n          <div className=\"col text-right\">\n            <RangePicker\n              defaultValue={[\n                moment(new Date(), 'YYYY-MM-DD').subtract(1, 'weeks'),\n                moment(new Date(), 'YYYY-MM-DD'),\n              ]}\n              onChange={handleRangeChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row m-0\">\n        <div className=\"col-md-7 p-2\">\n          <Card style={{ boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            <div class=\"flex-container\"\n                 style={{ display:'flex', flexBasis: 0 }}>\n              <div class=\"flex-child yellow\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{days}</h3>\n                <h7>Total number of days</h7>\n              </div>\n              <div class=\"flex-child red\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{given}</h3>\n                <h7>Updates given</h7>\n              </div>\n              <div class=\"flex-child blue\"\n                   style={{ flex:1, textAlign:'center'}}>\n                <h3>{notGiven}</h3>\n                <h7>Updates missed</h7>\n              </div>\n            </div>\n          </Card>\n          <Card style={{ boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)', marginTop: '20px'}}>\n            <div><p>Number of times updated first:{firstCounter}</p></div>\n            <div><p>Number of times updated last:{lastCounter}</p></div>\n            <div><p>Number of times got kicked:☠</p></div>\n          </Card>\n        </div>\n        <div className=\"col-md-5 p-2\">\n          <Card style={{backgroundColor: '#FFFFFF', boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            <Doughnut pdata={pieData}/>\n          </Card>\n        </div>\n        <div className=\"col-md-12 p-2\">\n          <Card style={{backgroundColor: '#FFFFFF', boxShadow: '10px 10px 5px rgba(0, 0, 0, 0.25)'}}>\n            <Statsdash data={data} isLoaded={true} />\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}