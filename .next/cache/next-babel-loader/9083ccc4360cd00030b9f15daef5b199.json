{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useEffect, useState } from 'react';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport Input from 'antd/lib/input';\nimport Avatar from 'antd/lib/avatar';\nimport dataFetch from '../../utils/dataFetch';\nimport Base from '../../components/base';\nimport TitleBar from '../../components/titlebar';\nconst {\n  Search\n} = Input;\nconst {\n  Meta\n} = Card;\nconst IndividualReport = props => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  // const [username, setUsername] = useState('');\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(false);\n  const query = `\n    query getMemberStatusUpdates($username: String!){\n      getMemberStatusUpdates(username:$username){\n        message\n        date\n        member{\n          fullName\n          profile{\n            profilePic\n          }\n          avatar{\n            githubUsername\n          }\n        }\n      }\n    }`;\n  const routes = [{\n    path: '/',\n    name: 'Home'\n  }, {\n    path: '/status-updates/individual-report',\n    name: 'Status Update'\n  }];\n  const fetchData = async variables => dataFetch({\n    query,\n    variables\n  });\n  const getMemberUpdates = username => {\n    // setUsername(username);\n    const variables = {\n      username\n    };\n    fetchData(variables).then(r => {\n      // console.log(r);\n      setData(r.data.getMemberStatusUpdates);\n      setLoaded(true);\n    });\n  };\n  console.log(data);\n  return __jsx(Base, _extends({\n    title: \"Individual Report | Status Updates \"\n  }, props), __jsx(TitleBar, {\n    routes: routes,\n    title: \"Individual Report\",\n    subTitle: \"Get individual report of every member\"\n  }), __jsx(\"div\", {\n    className: \"row m-4\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 p-2\"\n  }, __jsx(Search, {\n    placeholder: \"Search Member\",\n    onSearch: value => getMemberUpdates(value),\n    style: {\n      width: 350\n    },\n    enterButton: true\n  })), __jsx(\"div\", {\n    className: \"col-md-3\"\n  }), data.length > 0 ? __jsx(\"div\", {\n    className: \"col-md-3 p-2\"\n  }, __jsx(\"b\", null, \"No of status updates\"), \": \", data.length) : null), data.length > 0 ? data.map(report => __jsx(\"div\", {\n    className: \"m-4\",\n    key: report\n  }, __jsx(Card, {\n    loading: !isLoaded,\n    type: \"inner\",\n    title: __jsx(Meta, {\n      avatar: __jsx(Avatar, {\n        src: report.member.profile.profilePic ? `https://api.amfoss.in/${report.member.profile.profilePic}` : `https://avatars.githubusercontent.com/${report.member.avatar.githubUsername}`\n      }),\n      title: report.member.fullName\n    }),\n    extra: report.date\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: report.message\n    }\n  })))) : __jsx(\"h6\", {\n    className: \"text-center ant-list-empty-text\",\n    style: {\n      marginTop: '30vh'\n    }\n  }, \"Type the username to get the report\"));\n};\nexport default IndividualReport;\nexport const Ov = () => {\n  __jsx(Card, null, data.length);\n};","map":{"version":3,"names":["React","useEffect","useState","Card","Input","Avatar","dataFetch","Base","TitleBar","Search","Meta","IndividualReport","props","data","setData","isLoaded","setLoaded","query","routes","path","name","fetchData","variables","getMemberUpdates","username","then","r","getMemberStatusUpdates","console","log","__jsx","_extends","title","subTitle","className","placeholder","onSearch","value","style","width","enterButton","length","map","report","key","loading","type","avatar","src","member","profile","profilePic","githubUsername","fullName","extra","date","dangerouslySetInnerHTML","__html","message","marginTop","Ov"],"sources":["/home/ash/react projects/amFOSS-webapp/pages/status-updates/individual-report.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport Input from 'antd/lib/input';\nimport Avatar from 'antd/lib/avatar';\n\nimport dataFetch from '../../utils/dataFetch';\nimport Base from '../../components/base';\nimport TitleBar from '../../components/titlebar';\n\nconst { Search } = Input;\nconst { Meta } = Card;\n\nconst IndividualReport = (props) => {\n  const [data, setData] = useState([]);\n  // const [username, setUsername] = useState('');\n  const [isLoaded, setLoaded] = useState(false);\n\n  const query = `\n    query getMemberStatusUpdates($username: String!){\n      getMemberStatusUpdates(username:$username){\n        message\n        date\n        member{\n          fullName\n          profile{\n            profilePic\n          }\n          avatar{\n            githubUsername\n          }\n        }\n      }\n    }`;\n\n  const routes = [\n    {\n      path: '/',\n      name: 'Home',\n    },\n    {\n      path: '/status-updates/individual-report',\n      name: 'Status Update',\n    },\n  ];\n\n  const fetchData = async (variables) => dataFetch({ query, variables });\n\n  const getMemberUpdates = (username) => {\n    // setUsername(username);\n    const variables = { username };\n    fetchData(variables).then((r) => {\n      // console.log(r);\n      setData(r.data.getMemberStatusUpdates);\n      setLoaded(true);\n    });\n  };\n\n  console.log(data);\n\n  return (\n    <Base title=\"Individual Report | Status Updates \" {...props}>\n      <TitleBar\n        routes={routes}\n        title=\"Individual Report\"\n        subTitle=\"Get individual report of every member\"\n      />\n      <div className=\"row m-4\">\n        <div className=\"col-md-6 p-2\">\n          <Search\n            placeholder=\"Search Member\"\n            onSearch={(value) => getMemberUpdates(value)}\n            style={{ width: 350 }}\n            enterButton\n          />\n        </div>\n        <div className=\"col-md-3\" />\n        {data.length > 0 ? (\n          <div className=\"col-md-3 p-2\">\n            <b>No of status updates</b>: {data.length}\n          </div>\n        ) : null}\n      </div>\n      {data.length > 0 ? (\n        data.map((report) => (\n          <div className=\"m-4\" key={report}>\n            <Card\n              loading={!isLoaded}\n              type=\"inner\"\n              title={\n                <Meta\n                  avatar={\n                    <Avatar\n                      src={\n                        report.member.profile.profilePic\n                          ? `https://api.amfoss.in/${report.member.profile.profilePic}`\n                          : `https://avatars.githubusercontent.com/${report.member.avatar.githubUsername}`\n                      }\n                    />\n                  }\n                  title={report.member.fullName}\n                />\n              }\n              extra={report.date}\n            >\n              <div dangerouslySetInnerHTML={{ __html: report.message }} />\n            </Card>\n          </div>\n        ))\n      ) : (\n        <h6\n          className=\"text-center ant-list-empty-text\"\n          style={{ marginTop: '30vh' }}\n        >\n          Type the username to get the report\n        </h6>\n      )}\n    </Base>\n  );\n};\n\n\n\nexport default IndividualReport;\n\nexport const Ov=()=>{\n  <Card>{data.length}</Card>\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}