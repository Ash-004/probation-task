{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport Cookies from 'universal-cookie';\nvar cookies = new Cookies();\nvar API_URL = 'https://api.amfoss.in/';\nexport default (function (_ref) {\n  var query2 = _ref.query2,\n    variables = _ref.variables;\n  var body = {\n    query2: query2,\n    variables: variables\n  };\n  var token = cookies.get('token');\n  var apiConfig = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token ? \"JWT \".concat(token) : null\n    },\n    body: JSON.stringify(body)\n  };\n  return fetch(API_URL, apiConfig).then(function (response) {\n    var contentType = response.headers.get('content-type');\n    if (response.ok) {\n      if (contentType && contentType.indexOf('application/json') !== -1) {\n        return response.json().then(function (json) {\n          return json;\n        });\n      }\n      if (contentType && contentType.indexOf('text') !== -1) {\n        return response.text().then(function (text) {\n          return text;\n        });\n      }\n      return response;\n    }\n    console.error(\"Response status \".concat(response.status, \" during dataFetch for url \").concat(response.url, \".\"));\n    throw response;\n  });\n});","map":{"version":3,"names":["fetch","Cookies","cookies","API_URL","_ref","query2","variables","body","token","get","apiConfig","method","headers","Authorization","concat","JSON","stringify","then","response","contentType","ok","indexOf","json","text","console","error","status","url"],"sources":["/home/ash/react projects/amFOSS-webapp/utils/dataFetch.js"],"sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\nconst API_URL = 'https://api.amfoss.in/';\n\nexport default ({ query2, variables }) => {\n  const body = {\n    query2,\n    variables,\n  };\n\n  const token = cookies.get('token');\n\n  const apiConfig = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token ? `JWT ${token}` : null,\n    },\n    body: JSON.stringify(body),\n  };\n\n  return fetch(API_URL, apiConfig).then(function (response) {\n    const contentType = response.headers.get('content-type');\n    if (response.ok) {\n      if (contentType && contentType.indexOf('application/json') !== -1) {\n        return response.json().then((json) => json);\n      }\n      if (contentType && contentType.indexOf('text') !== -1) {\n        return response.text().then((text) => text);\n      }\n      return response;\n    }\n    console.error(\n      `Response status ${response.status} during dataFetch for url ${response.url}.`\n    );\n    throw response;\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,IAAMC,OAAO,GAAG,IAAID,OAAO,EAAE;AAC7B,IAAME,OAAO,GAAG,wBAAwB;AAExC,gBAAe,UAAAC,IAAA,EAA2B;EAAA,IAAxBC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;EACjC,IAAMC,IAAI,GAAG;IACXF,MAAM,EAANA,MAAM;IACNC,SAAS,EAATA;EACF,CAAC;EAED,IAAME,KAAK,GAAGN,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC;EAElC,IAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAEL,KAAK,UAAAM,MAAA,CAAUN,KAAK,IAAK;IAC1C,CAAC;IACDD,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAACT,IAAI;EAC3B,CAAC;EAED,OAAOP,KAAK,CAACG,OAAO,EAAEO,SAAS,CAAC,CAACO,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACxD,IAAMC,WAAW,GAAGD,QAAQ,CAACN,OAAO,CAACH,GAAG,CAAC,cAAc,CAAC;IACxD,IAAIS,QAAQ,CAACE,EAAE,EAAE;MACf,IAAID,WAAW,IAAIA,WAAW,CAACE,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE;QACjE,OAAOH,QAAQ,CAACI,IAAI,EAAE,CAACL,IAAI,CAAC,UAACK,IAAI;UAAA,OAAKA,IAAI;QAAA,EAAC;MAC7C;MACA,IAAIH,WAAW,IAAIA,WAAW,CAACE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QACrD,OAAOH,QAAQ,CAACK,IAAI,EAAE,CAACN,IAAI,CAAC,UAACM,IAAI;UAAA,OAAKA,IAAI;QAAA,EAAC;MAC7C;MACA,OAAOL,QAAQ;IACjB;IACAM,OAAO,CAACC,KAAK,oBAAAX,MAAA,CACQI,QAAQ,CAACQ,MAAM,gCAAAZ,MAAA,CAA6BI,QAAQ,CAACS,GAAG,OAC5E;IACD,MAAMT,QAAQ;EAChB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}