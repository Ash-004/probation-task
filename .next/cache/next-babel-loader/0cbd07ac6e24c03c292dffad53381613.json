{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport List from 'antd/lib/list';\nimport Avatar from 'antd/lib/avatar';\nimport Badge from 'antd/lib/badge';\nimport Tabs from 'antd/lib/tabs';\nvar TabPane = Tabs.TabPane;\nvar DailyStatusReportCard = function DailyStatusReportCard(_ref) {\n  var data = _ref.data,\n    isLoaded = _ref.isLoaded;\n  var membersCard = function membersCard(members) {\n    return __jsx(List, {\n      grid: {\n        gutter: 16,\n        column: 1,\n        sm: 2,\n        md: 3,\n        lg: 4\n      },\n      dataSource: members,\n      locale: {\n        emptyText: 'No member sent update.'\n      },\n      renderItem: function renderItem(m) {\n        return __jsx(List.Item, null, __jsx(Card, null, __jsx(List.Item.Meta, {\n          avatar: __jsx(Avatar, {\n            src: m.member.profile.profilePic ? \"https://api.amfoss.in/\".concat(m.member.profile.profilePic) : \"https://avatars.githubusercontent.com/\".concat(m.member.avatar.githubUsername)\n          }),\n          title: __jsx(\"a\", {\n            href: \"/@\".concat(m.member.username)\n          }, __jsx(\"b\", null, m.member.fullName))\n        })));\n      }\n    });\n  };\n  return __jsx(\"div\", {\n    className: \"listing-tabs\"\n  }, __jsx(Tabs, {\n    defaultActiveKey: \"1\",\n    size: \"large\",\n    type: \"line\"\n  }, __jsx(TabPane, {\n    key: 1,\n    tab: __jsx(\"h6\", {\n      className: \"p-2 m-0\"\n    }, \"Sent\", __jsx(Badge, {\n      count: isLoaded ? data.membersSent.length : null,\n      style: {\n        margin: '0.5rem',\n        backgroundColor: 'green'\n      }\n    }))\n  }, isLoaded ? membersCard(data.membersSent, 'sent') : null), __jsx(TabPane, {\n    key: 2,\n    id: \"absentToday\",\n    tab: __jsx(\"h6\", {\n      className: \"p-2 m-0\"\n    }, \"Did Not Send\", __jsx(Badge, {\n      count: isLoaded ? data.memberDidNotSend.length : null,\n      style: {\n        margin: '0.5rem',\n        backgroundColor: 'red'\n      }\n    }))\n  }, isLoaded ? membersCard(data.memberDidNotSend, 'didNotSend') : null)));\n};\n_c = DailyStatusReportCard;\nDailyStatusReportCard.propTypes = {\n  data: PropTypes.object,\n  isLoaded: PropTypes.bool\n};\nexport default DailyStatusReportCard;\nvar _c;\n$RefreshReg$(_c, \"DailyStatusReportCard\");","map":{"version":3,"names":["React","PropTypes","Card","List","Avatar","Badge","Tabs","TabPane","DailyStatusReportCard","_ref","data","isLoaded","membersCard","members","__jsx","grid","gutter","column","sm","md","lg","dataSource","locale","emptyText","renderItem","m","Item","Meta","avatar","src","member","profile","profilePic","concat","githubUsername","title","href","username","fullName","className","defaultActiveKey","size","type","key","tab","count","membersSent","length","style","margin","backgroundColor","id","memberDidNotSend","_c","propTypes","object","bool","$RefreshReg$"],"sources":["/home/ash/react projects/amFOSS-webapp/modules/statusUpdates/components/DailyStatusReportCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// antd components\nimport Card from 'antd/lib/card';\nimport List from 'antd/lib/list';\nimport Avatar from 'antd/lib/avatar';\nimport Badge from 'antd/lib/badge';\nimport Tabs from 'antd/lib/tabs';\n\nconst { TabPane } = Tabs;\n\nconst DailyStatusReportCard = ({ data, isLoaded }) => {\n  const membersCard = (members) => (\n    <List\n      grid={{ gutter: 16, column: 1, sm: 2, md: 3, lg: 4 }}\n      dataSource={members}\n      locale={{ emptyText: 'No member sent update.' }}\n      renderItem={(m) => (\n        <List.Item>\n          <Card>\n            <List.Item.Meta\n              avatar={\n                <Avatar\n                  src={\n                    m.member.profile.profilePic\n                      ? `https://api.amfoss.in/${m.member.profile.profilePic}`\n                      : `https://avatars.githubusercontent.com/${m.member.avatar.githubUsername}`\n                  }\n                />\n              }\n              title={\n                <a href={`/@${m.member.username}`}>\n                  <b>{m.member.fullName}</b>\n                </a>\n              }\n            />\n          </Card>\n        </List.Item>\n      )}\n    />\n  );\n\n  return (\n    <div className=\"listing-tabs\">\n      <Tabs defaultActiveKey=\"1\" size=\"large\" type=\"line\">\n        <TabPane\n          key={1}\n          tab={\n            <h6 className=\"p-2 m-0\">\n              Sent\n              <Badge\n                count={isLoaded ? data.membersSent.length : null}\n                style={{ margin: '0.5rem', backgroundColor: 'green' }}\n              />\n            </h6>\n          }\n        >\n          {isLoaded ? membersCard(data.membersSent, 'sent') : null}\n        </TabPane>\n        <TabPane\n          key={2}\n          id=\"absentToday\"\n          tab={\n            <h6 className=\"p-2 m-0\">\n              Did Not Send\n              <Badge\n                count={isLoaded ? data.memberDidNotSend.length : null}\n                style={{ margin: '0.5rem', backgroundColor: 'red' }}\n              />\n            </h6>\n          }\n        >\n          {isLoaded ? membersCard(data.memberDidNotSend, 'didNotSend') : null}\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nDailyStatusReportCard.propTypes = {\n  data: PropTypes.object,\n  isLoaded: PropTypes.bool,\n};\n\nexport default DailyStatusReportCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}